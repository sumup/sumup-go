{"components":{"examples":{"CreatedReader":{"summary":"A reader that waits for the physical device to acknowledge the pairing.","value":{"created_at":"2023-05-09T14:50:20.214Z","device":{"identifier":"U1DT3NA00-CN","model":"solo"},"id":"rdr_3MSAFM23CK82VSTT4BN6RWSQ65","name":"Frontdesk","status":"processing","updated_at":"2023-05-09T14:52:58.714Z"}}},"links":{"DeleteReaderByID":{"description":"Delete the reader.\n","operationId":"DeleteReader","parameters":{"id":"$response.body#/id"}},"UpdateReaderByID":{"description":"Update the reader object. This can be used to set a name after using this endpoint to verify the pairing code.\n","operationId":"UpdateReader","parameters":{"id":"$response.body#/id"}}},"schemas":{"APIKey":{"properties":{"created_at":{"example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"},"id":{"description":"Unique identifier of the API Key.\n","example":"sup_pk_0D1FIpM6xqueY3L4Y994nseK0xMfOjPAU","type":"string"},"name":{"description":"User-assigned name of the API Key.","example":"My API Key","type":"string"},"plaintext":{"description":"The plaintext value of the API key. This field is returned only in the response to API key creation and is never again available in the plaintext form.\n","example":"sup_sk_LZFWoLydp6S4S4KQpGVs1POzzp6cL1vyZ","type":"string"},"preview":{"description":"Last 8 characters of the API key.\n","example":"p6cL1vyZ","type":"string"},"scopes":{"$ref":"#/components/schemas/OAuth2Scopes"},"type":{"enum":["public","secret"],"example":"secret","type":"string"},"updated_at":{"example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"}},"required":["id","name","scopes","preview","type","created_at","updated_at"],"title":"API Key","type":"object"},"APIKeysList":{"example":{"items":[{"created_at":"2023-03-24T10:10:10Z","id":"sup_pk_1tpmgizNLHMkx1DdKd2hdzorZAaf6AcZ9","name":"","preview":"Aaf6AcZ9","scopes":[],"type":"public","updated_at":"2023-03-24T10:10:10Z"},{"created_at":"2023-03-25T09:10:10Z","id":"sup_pk_0D1FIpM6xqueY3L4Y994nseK0xMfOjPAU","name":"Test Key","preview":"TGhqew1b","scopes":["transactions.history","user.app-settings","user.profile_readonly","user.profile","user.subaccounts","user.payout-settings","products","payments","payment_instruments","readers.read","readers.write"],"type":"secret","updated_at":"2023-03-25T09:10:10Z"}],"total_count":2},"properties":{"items":{"items":{"$ref":"#/components/schemas/APIKey"},"type":"array"},"total_count":{"type":"integer"}},"required":["items","total_count"],"type":"object"},"Account":{"description":"Profile information.","properties":{"type":{"description":"The role of the user.","enum":["normal","operator"],"type":"string"},"username":{"description":"Username of the user profile.","type":"string"}},"type":"object"},"Address":{"description":"Profile's personal address information.","properties":{"city":{"description":"City name from the address.","example":"Berlin","type":"string"},"country":{"description":"Two letter country code formatted according to [ISO3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).","example":"DE","type":"string"},"line1":{"description":"First line of the address with details of the street name and number.","example":"Sample street","type":"string"},"line2":{"description":"Second line of the address with details of the building, unit, apartment, and floor numbers.","example":"ap. 5","type":"string"},"postal_code":{"description":"Postal code from the address.","example":"10115","type":"string"},"state":{"description":"State name or abbreviation from the address.","example":"Berlin","type":"string"}},"required":["country"],"type":"object"},"AddressWithDetails":{"description":"Details of the registered address.","properties":{"address_line1":{"description":"Address line 1","type":"string"},"address_line2":{"description":"Address line 2","type":"string"},"city":{"description":"City","type":"string"},"company":{"description":"undefined","type":"string"},"country":{"description":"Country ISO 3166-1 code","type":"string"},"country_details":{"$ref":"#/components/schemas/CountryDetails"},"first_name":{"description":"undefined","type":"string"},"landline":{"description":"Landline number","type":"string"},"last_name":{"description":"undefined","type":"string"},"post_code":{"description":"Postal code","type":"string"},"region_code":{"description":"Region code","type":"string"},"region_id":{"description":"Country region id","type":"number"},"region_name":{"description":"Region name","type":"string"},"state_id":{"description":"undefined","type":"string"},"timeoffset_details":{"$ref":"#/components/schemas/TimeoffsetDetails"}},"type":"object"},"Affiliate":{"description":"Affiliate metadata for the transaction.\nIt is an optional field that allow for integrators to track the source of the transaction.\n","properties":{"app_id":{"description":"Application ID of the affiliate.\nIt is a unique identifier for the application and should be set by the integrator in the [Affiliate Keys](https://developer.sumup.com/affiliate-keys) page.\n","example":"com.example.app","type":"string"},"foreign_transaction_id":{"description":"Foreign transaction ID of the affiliate.\nIt is a unique identifier for the transaction.\nIt can be used later to fetch the transaction details via the [Transactions API](https://developer.sumup.com/api/transactions/get).\n","example":"123456","type":"string"},"key":{"description":"Key of the affiliate.\nIt is a unique identifier for the key  and should be generated by the integrator in the [Affiliate Keys](https://developer.sumup.com/affiliate-keys) page.\n","example":"123e4567-e89b-12d3-a456-426614174000","format":"uuid","type":"string"},"tags":{"additionalProperties":true,"description":"Additional metadata for the transaction.\nIt is key-value object that can be associated with the transaction.\n","example":{},"type":"object"}},"required":["app_id","key","foreign_transaction_id"],"type":"object"},"AmountEvent":{"description":"Amount of the event.","format":"float","type":"number"},"AppSettings":{"description":"Mobile app settings","properties":{"advanced_mode":{"description":"Advanced mode.","type":"string"},"barcode_scanner":{"description":"Barcode scanner.","type":"string"},"cash_payment":{"description":"Cash payment.","type":"string"},"checkout_preference":{"description":"Checkout preference","type":"string"},"expected_max_transaction_amount":{"description":"Expected max transaction amount.","type":"number"},"include_vat":{"description":"Include vat.","type":"boolean"},"manual_entry":{"description":"Manual entry.","type":"string"},"manual_entry_tutorial":{"description":"Manual entry tutorial.","type":"boolean"},"mobile_payment":{"description":"Mobile payment.","type":"string"},"mobile_payment_tutorial":{"description":"Mobile payment tutorial.","type":"boolean"},"reader_payment":{"description":"Reader payment.","type":"string"},"referral":{"description":"Referral.","type":"string"},"tax_enabled":{"description":"Tax enabled.","type":"boolean"},"terminal_mode_tutorial":{"description":"Terminal mode tutorial.","type":"boolean"},"tip_rates":{"description":"Tip rates.","items":{"format":"float","type":"number"},"type":"array"},"tipping":{"description":"Tipping.","type":"string"}},"type":"object"},"Attributes":{"additionalProperties":{"maxLength":256},"description":"Object attributes that modifiable only by SumUp applications.","example":{},"type":"object"},"AuthToken":{"description":"Authorization token flow","properties":{"client_id":{"description":"The client ID of your application that was generated when you [registered it](https://developer.sumup.com/docs/register-app).","example":"fOcmczrYtYMJ7Li5GjMLLcUeC9dN","type":"string"},"client_secret":{"description":"The client secret of your application that was generated when you [registered it](https://developer.sumup.com/docs/register-app).","example":"717bd571b54297494cd7a79b491e8f2c1da6189c4cc2d3481380e8366eef539c","type":"string"},"code":{"description":"The authorization code that you received from requesting an authorization code.","example":"be366ce9fccd0c337d1da29b31d06dd1135ab95401562883","type":"string"},"grant_type":{"description":"The grant type used for obtaining an access token.","enum":["authorization_code","refresh_token"],"example":"refresh_token","type":"string"},"refresh_token":{"description":"A **required** parameter when generating a refresh token.","example":"d180031bfe9bac36c336e5746637810272546865e9c9586012f462a56f3fe9af","type":"string"}},"required":["grant_type","client_id","client_secret","code"],"type":"object"},"BankAccount":{"properties":{"account_category":{"description":"Account category - business or personal","type":"string"},"account_holder_name":{"type":"string"},"account_number":{"description":"Account number","type":"string"},"account_type":{"description":"Type of the account","type":"string"},"bank_code":{"description":"Bank code","type":"string"},"bank_name":{"description":"Bank name","type":"string"},"branch_code":{"description":"Branch code","type":"string"},"created_at":{"description":"Creation date of the bank account","type":"string"},"iban":{"description":"IBAN","type":"string"},"primary":{"description":"The primary bank account is the one used for payouts","type":"boolean"},"status":{"description":"Status in the verification process","type":"string"},"swift":{"description":"SWIFT code","type":"string"}},"type":"object"},"BusinessOwners":{"description":"Business owners information.","items":{"properties":{"date_of_birth":{"description":"Date of birth","type":"string"},"first_name":{"description":"BO's first name","type":"string"},"landline":{"description":"BO's Landline","type":"string"},"last_name":{"description":"BO's last name of the user","type":"string"},"mobile_phone":{"description":"Mobile phone number","type":"string"},"ownership":{"description":"Ownership percentage","type":"number"}},"type":"object"},"type":"array"},"Card":{"description":"__Required when payment type is `card`.__ Details of the payment card.","properties":{"cvv":{"description":"Three or four-digit card verification value (security code) of the payment card.","example":"123","maxLength":4,"minLength":3,"type":"string","writeOnly":true},"expiry_month":{"description":"Month from the expiration time of the payment card. Accepted format is `MM`.","enum":["01","02","03","04","05","06","07","08","09","10","11","12"],"type":"string","writeOnly":true},"expiry_year":{"description":"Year from the expiration time of the payment card. Accepted formats are `YY` and `YYYY`.","example":"2023","maxLength":4,"minLength":2,"type":"string","writeOnly":true},"last_4_digits":{"description":"Last 4 digits of the payment card number.","example":"3456","maxLength":4,"minLength":4,"readOnly":true,"type":"string"},"name":{"description":"Name of the cardholder as it appears on the payment card.","example":"FIRSTNAME LASTNAME","type":"string","writeOnly":true},"number":{"description":"Number of the payment card (without spaces).","example":"1234567890123456","type":"string","writeOnly":true},"type":{"description":"Issuing card network of the payment card.","enum":["AMEX","CUP","DINERS","DISCOVER","ELO","ELV","HIPERCARD","JCB","MAESTRO","MASTERCARD","VISA","VISA_ELECTRON","VISA_VPAY","UNKNOWN"],"readOnly":true,"type":"string"},"zip_code":{"description":"Required five-digit ZIP code. Applicable only to merchant users in the USA.","example":"12345","maxLength":5,"minLength":5,"type":"string","writeOnly":true}},"required":["name","number","expiry_month","expiry_year","cvv","last_4_digits","type"],"type":"object"},"CardResponse":{"description":"Details of the payment card.","properties":{"last_4_digits":{"description":"Last 4 digits of the payment card number.","example":"3456","maxLength":4,"minLength":4,"readOnly":true,"type":"string"},"type":{"description":"Issuing card network of the payment card.","enum":["AMEX","CUP","DINERS","DISCOVER","ELO","ELV","HIPERCARD","JCB","MAESTRO","MASTERCARD","VISA","VISA_ELECTRON","VISA_VPAY","UNKNOWN"],"readOnly":true,"type":"string"}},"type":"object"},"Checkout":{"description":"Details of the payment checkout.","properties":{"amount":{"description":"Amount of the payment.","example":10.1,"format":"float","type":"number"},"checkout_reference":{"description":"Unique ID of the payment checkout specified by the client application when creating the checkout resource.","maxLength":90,"type":"string"},"currency":{"$ref":"#/components/schemas/Currency"},"customer_id":{"description":"Unique identification of a customer. If specified, the checkout session and payment instrument are associated with the referenced customer.","example":"831ff8d4cd5958ab5670","type":"string"},"date":{"description":"Date and time of the creation of the payment checkout. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.","example":"2020-02-29T10:56:56+00:00","format":"date-time","type":"string"},"description":{"description":"Short description of the checkout visible in the SumUp dashboard. The description can contribute to reporting, allowing easier identification of a checkout.","type":"string"},"id":{"description":"Unique ID of the checkout resource.","example":"4e425463-3e1b-431d-83fa-1e51c2925e99","readOnly":true,"type":"string"},"mandate":{"$ref":"#/components/schemas/MandateResponse"},"merchant_code":{"description":"Unique identifying code of the merchant profile.","type":"string"},"pay_to_email":{"description":"Email address of the registered user (merchant) to whom the payment is made.","format":"email","type":"string"},"return_url":{"description":"URL to which the SumUp platform sends the processing status of the payment checkout.","format":"uri","type":"string"},"status":{"description":"Current status of the checkout.","enum":["PENDING","FAILED","PAID"],"type":"string"},"transactions":{"description":"List of transactions related to the payment.","items":{"allOf":[{"$ref":"#/components/schemas/TransactionMixinBase"},{"$ref":"#/components/schemas/TransactionMixinCheckout"}]},"type":"array","uniqueItems":true},"valid_until":{"description":"Date and time of the checkout expiration before which the client application needs to send a processing request. If no value is present, the checkout does not have an expiration time.","example":"2020-02-29T10:56:56+00:00","format":"date-time","nullable":true,"type":"string"}},"title":"Checkout","type":"object"},"CheckoutCreateRequest":{"description":"Details of the payment checkout.","properties":{"amount":{"description":"Amount of the payment.","format":"float","type":"number"},"checkout_reference":{"description":"Unique ID of the payment checkout specified by the client application when creating the checkout resource.","maxLength":90,"type":"string"},"currency":{"$ref":"#/components/schemas/Currency"},"customer_id":{"description":"Unique identification of a customer. If specified, the checkout session and payment instrument are associated with the referenced customer.","type":"string"},"date":{"description":"Date and time of the creation of the payment checkout. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.","example":"2020-02-29T10:56:56+00:00","format":"date-time","readOnly":true,"type":"string"},"description":{"description":"Short description of the checkout visible in the SumUp dashboard. The description can contribute to reporting, allowing easier identification of a checkout.","type":"string"},"id":{"description":"Unique ID of the checkout resource.","readOnly":true,"type":"string"},"merchant_code":{"description":"Unique identifying code of the merchant profile.","type":"string"},"pay_to_email":{"description":"Email address of the registered user (merchant) to whom the payment is made. It is highly recommended to use `merchant_code` instead of `pay_to_email`.","format":"email","type":"string"},"payment_type":{"description":"Alternative payment method name","example":"boleto","type":"string"},"personal_details":{"description":"Object containing personal details about the payer, typical for __Boleto__ checkouts","properties":{"address":{"description":"Payer's address information","properties":{"city":{"description":"Payer's city","example":"Rio de Janeiro","type":"string"},"country":{"description":"Payer's country","example":"BR","type":"string"},"line_1":{"description":"Field for address details","type":"string"},"postal_code":{"description":"Payer's postal code. Must be eight digits long, however an optional dash could be applied after the 5th digit ([more information about the format available here](https://en.wikipedia.org/wiki/List_of_postal_codes_in_Brazil)). Both options are accepted as correct.","example":"20000-000","pattern":"^\\d{5}-?\\d{3}$","type":"string"},"state":{"description":"Payer's state code","enum":["AC","AL","AP","AM","BA","CE","DF","ES","GO","MA","MT","MS","MG","PA","PB","PR","PE","PI","RJ","RN","RS","RO","RR","SC","SP","SE","TO"],"example":"RJ","type":"string"}},"type":"object"},"email":{"description":"Payer's email address","example":"test@example.com","type":"string"},"first_name":{"description":"Payer's first name","example":"John","type":"string"},"last_name":{"description":"Payer's last name","example":"Doe","type":"string"},"tax_id":{"description":"Payer's tax identification number (CPF)","example":"423.378.593-47","type":"string"}},"type":"object"},"purpose":{"default":"CHECKOUT","description":"Purpose of the checkout.","enum":["CHECKOUT","SETUP_RECURRING_PAYMENT"],"type":"string"},"redirect_url":{"description":"__Required__ for [APMs](https://developer.sumup.com/online-payments/apm/introduction) and __recommended__ for card payments. Refers to a url where the end user is redirected once the payment processing completes. If not specified, the [Payment Widget](https://developer.sumup.com/online-payments/tools/card-widget) renders [3DS challenge](https://developer.sumup.com/online-payments/features/3ds) within an iframe instead of performing a full-page redirect.","example":"https://mysite.com/completed_purchase","type":"string"},"return_url":{"description":"URL to which the SumUp platform sends the processing status of the payment checkout.","format":"uri","type":"string"},"status":{"description":"Current status of the checkout.","enum":["PENDING","FAILED","PAID"],"readOnly":true,"type":"string"},"transactions":{"description":"List of transactions related to the payment.","items":{"allOf":[{"$ref":"#/components/schemas/TransactionMixinBase"},{"$ref":"#/components/schemas/TransactionMixinCheckout"}]},"readOnly":true,"type":"array","uniqueItems":true},"valid_until":{"description":"Date and time of the checkout expiration before which the client application needs to send a processing request. If no value is present, the checkout does not have an expiration time.","example":"2020-02-29T10:56:56+00:00","format":"date-time","nullable":true,"readOnly":true,"type":"string"}},"required":["checkout_reference","amount","currency","merchant_code"],"type":"object"},"CheckoutProcessMixin":{"description":"Details of the payment instrument for processing the checkout.","properties":{"card":{"$ref":"#/components/schemas/Card"},"customer_id":{"description":"__Required when `token` is provided.__ Unique ID of the customer.","type":"string"},"installments":{"description":"Number of installments for deferred payments. Available only to merchant users in Brazil.","maximum":12,"minimum":1,"type":"integer"},"mandate":{"$ref":"#/components/schemas/MandatePayload"},"payment_type":{"enum":["card","boleto","ideal","blik","bancontact"],"type":"string"},"token":{"description":"__Required when using a tokenized card to process a checkout.__ Unique token identifying the saved payment card for a customer.","type":"string"}},"required":["payment_type"],"type":"object"},"CheckoutSuccess":{"allOf":[{"$ref":"#/components/schemas/Checkout"},{"properties":{"merchant_name":{"description":"Name of the merchant","example":"Sample Merchant","type":"string"},"payment_instrument":{"description":"Object containing token information for the specified payment instrument","properties":{"token":{"description":"Token value","example":"e76d7e5c-9375-4fac-a7e7-b19dc5302fbc","type":"string"}},"type":"object"},"redirect_url":{"description":"Refers to a url where the end user is redirected once the payment processing completes.","example":"https://mysite.com/completed_purchase","type":"string"},"transaction_code":{"description":"Transaction code of the successful transaction with which the payment for the checkout is completed.","example":"TEENSK4W2K","readOnly":true,"type":"string"},"transaction_id":{"description":"Transaction ID of the successful transaction with which the payment for the checkout is completed.","example":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","readOnly":true,"type":"string"}},"type":"object"}]},"CompatError":{"description":"Error","properties":{"error_code":{"example":"NOT_FOUND","type":"string"},"message":{"example":"Resource not found.","type":"string"}},"required":["error_code","message"],"type":"object"},"CountryDetails":{"description":"Country Details","properties":{"currency":{"description":"Currency ISO 4217 code","type":"string"},"en_name":{"description":"Country EN name","type":"string"},"iso_code":{"description":"Country ISO code","type":"string"},"native_name":{"description":"Country native name","type":"string"}},"type":"object"},"CreateReaderCheckout":{"description":"Reader Checkout","properties":{"affiliate":{"$ref":"#/components/schemas/Affiliate"},"card_type":{"description":"The card type of the card used for the transaction.\nIs is required only for some countries (e.g: Brazil).\n","enum":["credit","debit"],"example":"credit","type":"string"},"description":{"description":"Description of the checkout to be shown in the Merchant Sales\n","type":"string"},"installments":{"description":"Number of installments for the transaction.\nIt may vary according to the merchant country.\nFor example, in Brazil, the maximum number of installments is 12.\n","example":1,"type":"integer"},"return_url":{"description":"Webhook URL to which the payment result will be sent.\nIt must be a HTTPS url.\n","example":"https://www.example.com","format":"uri","type":"string"},"tip_rates":{"description":"List of tipping rates to be displayed to the cardholder.\nThe rates are in percentage and should be between 0.01 and 0.99.\nThe list should be sorted in ascending order.\n","items":{"format":"float","multipleOf":0.01,"type":"number"},"type":"array"},"total_amount":{"$ref":"#/components/schemas/CreateReaderCheckoutAmount"}},"required":["total_amount"],"title":"Reader","type":"object"},"CreateReaderCheckoutAmount":{"description":"Amount of the transaction.\nThe amount is represented as an integer value altogether with the currency and the minor unit.\nFor example, EUR 1.00 is represented as value 100 with minor unit of 2.\n","properties":{"currency":{"description":"Currency ISO 4217 code","example":"EUR","type":"string"},"minor_unit":{"description":"The minor units of the currency. It represents the number of decimals of the currency.\nFor the currencies CLP, COP and HUF, the minor unit is 0.\n","example":2,"type":"integer"},"value":{"description":"Total amount of the transaction.\nIt must be a positive integer.\n","example":1000,"type":"integer"}},"required":["value","currency","minor_unit"],"type":"object"},"Currency":{"description":"Three-letter [ISO4217](https://en.wikipedia.org/wiki/ISO_4217) code of the currency for the amount. Currently supported currency values are enumerated above.","enum":["BGN","BRL","CHF","CLP","CZK","DKK","EUR","GBP","HRK","HUF","NOK","PLN","RON","SEK","USD"],"example":"EUR","type":"string"},"Customer":{"properties":{"customer_id":{"description":"Unique ID of the customer.","example":"831ff8d4cd5958ab5670","type":"string"},"personal_details":{"$ref":"#/components/schemas/PersonalDetails"}},"required":["customer_id"],"title":"Customer","type":"object"},"DetailsError":{"description":"Error message structure.","properties":{"details":{"description":"Details of the error.","type":"string"},"failed_constraints":{"items":{"properties":{"message":{"type":"string"},"reference":{"type":"string"}},"type":"object"},"type":"array"},"status":{"description":"The status code.","type":"number"},"title":{"description":"Short title of the error.","type":"string"}},"type":"object"},"DoingBusinessAs":{"description":"Doing Business As information","properties":{"address":{"properties":{"address_line1":{"description":"Address line 1","type":"string"},"address_line2":{"description":"Address line 2","type":"string"},"city":{"description":"City","type":"string"},"country":{"description":"Country ISO 3166-1 code","type":"string"},"post_code":{"description":"Postal code","type":"string"},"region_id":{"description":"Country region ID","type":"number"},"region_name":{"description":"Country region name","type":"string"}},"type":"object"},"business_name":{"description":"Doing business as name","type":"string"},"company_registration_number":{"description":"Doing business as company registration number","type":"string"},"email":{"description":"Doing business as email","type":"string"},"vat_id":{"description":"Doing business as VAT ID","type":"string"},"website":{"description":"Doing business as website","type":"string"}},"type":"object"},"Error":{"description":"Error message structure.","properties":{"error_code":{"description":"Platform code for the error.","type":"string"},"message":{"description":"Short description of the error.","type":"string"}},"type":"object"},"ErrorExtended":{"allOf":[{"$ref":"#/components/schemas/Error"},{"properties":{"param":{"description":"Parameter name (with relative location) to which the error applies. Parameters from embedded resources are displayed using dot notation. For example, `card.name` refers to the `name` parameter embedded in the `card` object.","type":"string"}},"type":"object"}]},"ErrorForbidden":{"description":"Error message for forbidden requests.","properties":{"error_code":{"description":"Platform code for the error.","type":"string"},"error_message":{"description":"Short description of the error.","type":"string"},"status_code":{"description":"HTTP status code for the error.","type":"string"}},"type":"object"},"Event":{"properties":{"amount":{"$ref":"#/components/schemas/AmountEvent"},"deducted_amount":{"description":"Amount deducted for the event.","format":"float","type":"number"},"deducted_fee_amount":{"description":"Amount of the fee deducted for the event.","format":"float","type":"number"},"fee_amount":{"description":"Amount of the fee related to the event.","format":"float","type":"number"},"id":{"$ref":"#/components/schemas/EventID"},"installment_number":{"description":"Consecutive number of the installment.","type":"integer"},"status":{"$ref":"#/components/schemas/EventStatus"},"timestamp":{"$ref":"#/components/schemas/TimestampEvent"},"transaction_id":{"$ref":"#/components/schemas/TransactionID"},"type":{"$ref":"#/components/schemas/EventType"}},"type":"object"},"EventID":{"description":"Unique ID of the transaction event.","format":"int64","type":"integer"},"EventStatus":{"description":"Status of the transaction event.","enum":["PENDING","SCHEDULED","FAILED","REFUNDED","SUCCESSFUL","PAID_OUT"],"type":"string"},"EventType":{"description":"Type of the transaction event.","enum":["PAYOUT","CHARGE_BACK","REFUND","PAYOUT_DEDUCTION"],"type":"string"},"FinancialPayouts":{"items":{"properties":{"amount":{"format":"float","type":"number"},"currency":{"type":"string"},"date":{"format":"date","type":"string"},"fee":{"format":"float","type":"number"},"id":{"type":"integer"},"reference":{"type":"string"},"status":{"enum":["SUCCESSFUL","FAILED"],"type":"string"},"transaction_code":{"type":"string"},"type":{"enum":["PAYOUT","CHARGE_BACK_DEDUCTION","REFUND_DEDUCTION","DD_RETURN_DEDUCTION","BALANCE_DEDUCTION"],"type":"string"}},"type":"object"},"title":"Financial Payouts","type":"array"},"HorizontalAccuracy":{"description":"Indication of the precision of the geographical position received from the payment terminal.","format":"float","type":"number"},"Invite":{"description":"Pending invitation for membership.\n","properties":{"email":{"description":"Email address of the invited user.","example":"boaty.mcboatface@sumup.com","format":"email","type":"string"},"expires_at":{"example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"}},"required":["email","expires_at"],"title":"Invite","type":"object"},"Lat":{"description":"Latitude value from the coordinates of the payment location (as received from the payment terminal reader).","format":"float","maximum":90,"minimum":0,"type":"number"},"LegalType":{"description":"Id of the legal type of the merchant profile","properties":{"description":{"description":"Legal type short description","type":"string"},"full_description":{"description":"Legal type description","type":"string"},"id":{"description":"Unique id","type":"number"},"sole_trader":{"description":"Sole trader legal type if true","type":"boolean"}},"type":"object"},"Link":{"description":"Details of a link to a related resource.","properties":{"href":{"description":"URL for accessing the related resource.","format":"uri","type":"string"},"rel":{"description":"Specifies the relation to the current resource.","type":"string"},"type":{"description":"Specifies the media type of the related resource.","type":"string"}},"type":"object"},"LinkRefund":{"allOf":[{"$ref":"#/components/schemas/Link"},{"properties":{"max_amount":{"description":"Maximum allowed amount for the refund.","format":"float","type":"number"},"min_amount":{"description":"Minimum allowed amount for the refund.","format":"float","type":"number"}},"type":"object"}]},"Lon":{"description":"Longitude value from the coordinates of the payment location (as received from the payment terminal reader).","format":"float","maximum":180,"minimum":0,"type":"number"},"MandatePayload":{"description":"Mandate is passed when a card is to be tokenized","example":{"type":"recurrent","user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.104 Safari/537.36","user_ip":"172.217.169.174"},"properties":{"type":{"description":"Indicates the mandate type","enum":["recurrent"],"type":"string"},"user_agent":{"description":"Operating system and web client used by the end-user","type":"string"},"user_ip":{"description":"IP address of the end user. Supports IPv4 and IPv6","type":"string"}},"required":["type","user_agent"],"type":"object"},"MandateResponse":{"description":"Created mandate","example":{"merchant_code":"MDASYTPD","status":"active","type":"recurrent"},"properties":{"merchant_code":{"description":"Merchant code which has the mandate","type":"string"},"status":{"description":"Mandate status","type":"string"},"type":{"description":"Indicates the mandate type","type":"string"}},"type":"object"},"Member":{"description":"A member is user within specific resource identified by resource id, resource type, and associated roles.\n","example":{"created_at":"2023-01-20T15:16:17Z","id":"mem_WZsm7QTPhVrompscmPhoGTXXcrd58fr9MOhP","permissions":["members_read","members_write","create_moto_payments","full_transaction_history_view","refund_transactions","create_referral","developer_settings_edit","developer_settings_access"],"roles":["role_admin","role_owner"],"status":"accepted","updated_at":"2023-02-20T15:16:17Z","user":{"email":"example@sumup.com","id":"44ca0f5b-813b-46e1-aee7-e6242010662e","mfa_on_login_enabled":true,"virtual_user":false}},"properties":{"attributes":{"$ref":"#/components/schemas/Attributes"},"created_at":{"example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"},"id":{"description":"ID of the member.","example":"mem_WZsm7QTPhVrompscmPhoGTXXcrd58fr9MOhP","type":"string"},"invite":{"$ref":"#/components/schemas/Invite"},"metadata":{"$ref":"#/components/schemas/Metadata"},"permissions":{"description":"User's permissions.","example":["members_read","members_write","create_moto_payments","full_transaction_history_view","refund_transactions","create_referral","developer_settings_edit","developer_settings_access"],"items":{"type":"string"},"type":"array"},"roles":{"description":"User's roles.","example":["role_admin"],"items":{"type":"string"},"type":"array"},"status":{"$ref":"#/components/schemas/MembershipStatus"},"updated_at":{"example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"},"user":{"$ref":"#/components/schemas/MembershipUser"}},"required":["id","roles","permissions","created_at","updated_at","status"],"title":"Member","type":"object"},"MembershipStatus":{"enum":["accepted","pending","expired","disabled","unknown"],"type":"string"},"MembershipUser":{"description":"User information.","properties":{"classic":{"$ref":"#/components/schemas/MembershipUserClassic"},"disabled_at":{"description":"Time when the user has been disabled. Applies only to virtual users (`virtual_user: true`).\n","format":"date-time","type":"string"},"email":{"description":"End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this value being unique, for unique identification use ID instead.\n","example":"example@sumup.com","type":"string"},"id":{"description":"Identifier for the End-User (also called Subject).","example":"44ca0f5b-813b-46e1-aee7-e6242010662e","type":"string"},"mfa_on_login_enabled":{"description":"True if the user has enabled MFA on login.\n","example":true,"type":"boolean"},"nickname":{"description":"User's preferred name. Used for display purposes only.\n","example":"Test User","type":"string"},"picture":{"description":"URL of the End-User's profile picture. This URL refers to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image.\n","example":"https://usercontent.sumup.com/44ca0f5b-813b-46e1-aee7-e6242010662e.png","format":"uri","type":"string"},"virtual_user":{"description":"True if the user is a virtual user (operator).\n","example":false,"type":"boolean"}},"required":["id","email","mfa_on_login_enabled","virtual_user"],"type":"object"},"MembershipUserClassic":{"deprecated":true,"description":"Classic identifiers of the user.","properties":{"user_id":{"format":"int32","type":"integer"}},"required":["user_id"],"type":"object"},"MerchantAccount":{"description":"Details of the merchant account.","properties":{"account":{"$ref":"#/components/schemas/Account"},"app_settings":{"$ref":"#/components/schemas/AppSettings"},"is_migrated_payleven_br":{"description":"Merchant comes from payleven BR migration","type":"boolean"},"merchant_profile":{"$ref":"#/components/schemas/MerchantProfile"},"permissions":{"$ref":"#/components/schemas/Permissions"},"personal_profile":{"$ref":"#/components/schemas/PersonalProfile"}},"title":"Merchant Account","type":"object"},"MerchantProfile":{"description":"Account's merchant profile","properties":{"address":{"$ref":"#/components/schemas/AddressWithDetails"},"bank_accounts":{"items":{"$ref":"#/components/schemas/BankAccount"},"type":"array"},"business_owners":{"$ref":"#/components/schemas/BusinessOwners"},"company_name":{"description":"Company name","type":"string"},"company_registration_number":{"description":"Company registration number","type":"string"},"country":{"description":"Merchant country code formatted according to [ISO3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) \u0026#40;for internal usage only\u0026#41;","type":"string"},"doing_business_as":{"$ref":"#/components/schemas/DoingBusinessAs"},"extdev":{"description":"True if the merchant is extdev","type":"boolean"},"legal_type":{"$ref":"#/components/schemas/LegalType"},"locale":{"description":"Merchant locale \u0026#40;for internal usage only\u0026#41;","type":"string"},"merchant_category_code":{"description":"Merchant category code","type":"string"},"merchant_code":{"description":"Unique identifying code of the merchant profile","type":"string"},"mobile_phone":{"description":"Mobile phone number","type":"string"},"nature_and_purpose":{"description":"Nature and purpose of the business","type":"string"},"payout_zone_migrated":{"description":"True if the payout zone of this merchant is migrated","type":"boolean"},"permanent_certificate_access_code":{"description":"Permanent certificate access code \u0026#40;Portugal\u0026#41;","type":"string"},"settings":{"$ref":"#/components/schemas/MerchantSettings"},"vat_id":{"description":"Vat ID","type":"string"},"vat_rates":{"$ref":"#/components/schemas/VatRates"},"website":{"description":"Website","type":"string"}},"type":"object"},"MerchantSettings":{"description":"Merchant settings \u0026#40;like \\\"payout_type\\\", \\\"payout_period\\\"\u0026#41;","properties":{"daily_payout_email":{"description":"Whether merchant will receive daily payout emails","type":"boolean"},"gross_settlement":{"description":"Whether merchant has gross settlement enabled","type":"boolean"},"monthly_payout_email":{"description":"Whether merchant will receive monthly payout emails","type":"boolean"},"moto_payment":{"description":"Whether merchant can make MOTO payments","enum":["UNAVAILABLE","ENFORCED","ON","OFF"],"type":"string"},"payout_instrument":{"description":"Payout Instrument","type":"string"},"payout_on_demand":{"description":"Whether merchant will receive payouts on demand","type":"boolean"},"payout_on_demand_available":{"description":"Whether merchant can edit payouts on demand","type":"boolean"},"payout_period":{"description":"Payout frequency","type":"string"},"payout_type":{"description":"Payout type","type":"string"},"printers_enabled":{"description":"Whether to show printers in mobile app","type":"boolean"},"stone_merchant_code":{"description":"Stone merchant code","type":"string"},"tax_enabled":{"description":"Whether to show tax in receipts \u0026#40;saved per transaction\u0026#41;","type":"boolean"}},"type":"object"},"Meta":{"additionalProperties":{"maxLength":256},"description":"Set of user-defined key-value pairs attached to the object.","example":{},"maxProperties":50,"type":"object"},"Metadata":{"additionalProperties":{"maxLength":256},"description":"Set of user-defined key-value pairs attached to the object. Partial updates are not supported. When updating, always submit whole metadata.","example":{},"type":"object"},"OAuth2Scopes":{"example":["invoices.read","invoices.write","products","user.app-settings"],"items":{"enum":["accounting.read","accounting.write","email","invoices.read","invoices.write","payment_instruments","payments","products","profile","readers.read","readers.write","transactions.history","user.app-settings","user.payout-settings","user.profile","user.profile_readonly","user.subaccounts"],"type":"string"},"maxItems":128,"type":"array"},"Operator":{"properties":{"account_type":{"enum":["operator","normal"],"type":"string"},"created_at":{"format":"date-time","type":"string"},"disabled":{"example":false,"type":"boolean"},"id":{"format":"int32","type":"integer"},"nickname":{"example":"Operator 1","nullable":true,"type":"string"},"permissions":{"$ref":"#/components/schemas/OperatorPermissions"},"updated_at":{"format":"date-time","type":"string"},"username":{"example":"operator1@mydomain.com","type":"string"}},"required":["id","username","disabled","created_at","updated_at","permissions","account_type"],"type":"object"},"OperatorPermissions":{"properties":{"admin":{"type":"boolean"},"create_moto_payments":{"type":"boolean"},"create_referral":{"type":"boolean"},"full_transaction_history_view":{"type":"boolean"},"refund_transactions":{"type":"boolean"}},"required":["create_moto_payments","create_referral","full_transaction_history_view","refund_transactions","admin"],"type":"object"},"PaymentInstrumentResponse":{"description":"Payment Instrument Response","example":{"active":true,"card":{"last_4_digits":"0001","type":"VISA"},"created_at":"2021-03-30T10:06:07.000+00:00","mandate":{"merchant_code":"MDASYTPD","status":"active","type":"recurrent"},"token":"bcfc8e5f-3b47-4cb9-854b-3b7a4cce7be3","type":"card"},"properties":{"active":{"default":true,"description":"Indicates whether the payment instrument is active and can be used for payments. To deactivate it, send a `DELETE` request to the resource endpoint.","readOnly":true,"type":"boolean"},"card":{"description":"Details of the payment card.","properties":{"last_4_digits":{"description":"Last 4 digits of the payment card number.","example":"3456","maxLength":4,"minLength":4,"readOnly":true,"type":"string"},"type":{"description":"Issuing card network of the payment card.","enum":["AMEX","CUP","DINERS","DISCOVER","ELO","ELV","HIPERCARD","JCB","MAESTRO","MASTERCARD","VISA","VISA_ELECTRON","VISA_VPAY","UNKNOWN"],"readOnly":true,"type":"string"}},"type":"object"},"created_at":{"description":"Creation date of payment instrument. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.","format":"date-time","type":"string"},"mandate":{"$ref":"#/components/schemas/MandateResponse"},"token":{"description":"Unique token identifying the saved payment card for a customer.","readOnly":true,"type":"string"},"type":{"description":"Type of the payment instrument.","enum":["card"],"type":"string"}},"type":"object"},"Permissions":{"description":"User permissions","properties":{"create_moto_payments":{"description":"Create MOTO payments","type":"boolean"},"create_referral":{"description":"Create referral","type":"boolean"},"full_transaction_history_view":{"description":"Can view full merchant transaction history","type":"boolean"},"refund_transactions":{"description":"Refund transactions","type":"boolean"}},"type":"object"},"PersonalDetails":{"description":"Personal details for the customer.","properties":{"address":{"$ref":"#/components/schemas/Address"},"birthdate":{"description":"Date of birth of the customer.","example":"1993-12-31","format":"date","type":"string"},"email":{"description":"Email address of the customer.","example":"user@example.com","type":"string"},"first_name":{"description":"First name of the customer.","example":"John","type":"string"},"last_name":{"description":"Last name of the customer.","example":"Doe","type":"string"},"phone":{"description":"Phone number of the customer.","example":"+491635559723","type":"string"}},"type":"object"},"PersonalProfile":{"description":"Account's personal profile.","properties":{"address":{"$ref":"#/components/schemas/AddressWithDetails"},"complete":{"type":"boolean"},"date_of_birth":{"description":"Date of birth","type":"string"},"first_name":{"description":"First name of the user","type":"string"},"last_name":{"description":"Last name of the user","type":"string"},"mobile_phone":{"description":"Mobile phone number","type":"string"}},"type":"object"},"Product":{"description":"Details of the product for which the payment is made.","properties":{"name":{"description":"Name of the product from the merchant's catalog.","type":"string"},"price":{"description":"Price of the product without VAT.","format":"float","type":"number"},"price_with_vat":{"description":"Price of a single product item with VAT.","format":"float","type":"number"},"quantity":{"description":"Number of product items for the purchase.","type":"number"},"single_vat_amount":{"description":"Amount of the VAT for a single product item (calculated as the product of `price` and `vat_rate`, i.e. `single_vat_amount = price * vat_rate`).","format":"float","type":"number"},"total_price":{"description":"Total price of the product items without VAT (calculated as the product of `price` and `quantity`, i.e. `total_price = price * quantity`).","format":"float","type":"number"},"total_with_vat":{"description":"Total price of the product items including VAT (calculated as the product of `price_with_vat` and `quantity`, i.e. `total_with_vat = price_with_vat * quantity`).","format":"float","type":"number"},"vat_amount":{"description":"Total VAT amount for the purchase (calculated as the product of `single_vat_amount` and `quantity`, i.e. `vat_amount = single_vat_amount * quantity`).","format":"float","type":"number"},"vat_rate":{"description":"VAT rate applicable to the product.","format":"float","type":"number"}},"type":"object"},"Reader":{"description":"A physical card reader device that can accept in-person payments.","properties":{"created_at":{"description":"Reader creation timestamp.","example":"2023-01-18T15:16:17Z","format":"date-time","type":"string"},"device":{"$ref":"#/components/schemas/ReaderDevice"},"id":{"$ref":"#/components/schemas/ReaderID"},"meta":{"$ref":"#/components/schemas/Meta"},"name":{"$ref":"#/components/schemas/ReaderName"},"status":{"$ref":"#/components/schemas/ReaderStatus"},"updated_at":{"description":"Reader last-modification timestamp.","example":"2023-01-20T15:16:17Z","format":"date-time","type":"string"}},"required":["id","name","status","device","created_at","updated_at"],"title":"Reader","type":"object"},"ReaderCheckoutStatusChange":{"description":"The callback payload containing the status change of the Reader Checkout.\n","properties":{"event_type":{"description":"The event type.","example":"solo.transaction.updated","type":"string"},"id":{"description":"The unique event id.","example":"123e4567-e89b-12d3-a456-426614174000","format":"uuid","type":"string"},"payload":{"description":"The event payload.","properties":{"client_transaction_id":{"description":"The unique client transaction id. It is the same returned by the Checkout.","example":"ba0a3c07-799e-40f8-89e9-1dfe96e4557e","format":"uuid","type":"string"},"merchant_code":{"description":"The target merchant code owner of the transaction.","example":"M1234567","type":"string"},"status":{"description":"The status of the transaction.","enum":["successful","failed"],"example":"successful","type":"string"},"transaction_id":{"deprecated":true,"description":"The unique transaction id.","example":"c88032e4-a384-4030-943c-ac59cc768d90","format":"uuid","type":"string"}},"required":["client_transaction_id","merchant_code","status"],"type":"object"},"timestamp":{"description":"The timestamp of the event.","example":"2021-01-01T00:00:00Z","format":"date-time","type":"string"}},"required":["id","event_type","payload","timestamp"],"type":"object"},"ReaderDevice":{"description":"Information about the underlying physical device.\n","properties":{"identifier":{"description":"A unique identifier of the physical device (e.g. serial number).","example":"U1DT3NA00-CN","type":"string"},"model":{"description":"Identifier of the model of the device.","enum":["solo","virtual-solo"],"example":"solo","type":"string"}},"required":["identifier","model"],"type":"object"},"ReaderID":{"description":"Unique identifier of the object.\n\nNote that this identifies the instance of the physical devices pairing with your SumUp account. \n\nIf you DELETE a reader, and pair the device again, the ID will be different. Do not use this ID to refer to a physical device.\n","example":"rdr_3MSAFM23CK82VSTT4BN6RWSQ65","maxLength":30,"minLength":30,"type":"string","x-go-type":"readers.ReaderID","x-go-type-import":{"path":"github.com/sumup/identity/apps/portier-backend/internal/domain/readers"}},"ReaderName":{"description":"Custom human-readable, user-defined name for easier identification of the reader.\n","example":"Frontdesk","maxLength":500,"type":"string"},"ReaderPairingCode":{"description":"The pairing code is a 8 or 9 character alphanumeric string that is displayed on a SumUp Device after initiating the pairing.\nIt is used to link the physical device to the created pairing.\n","example":"4WLFDSBF","maxLength":9,"minLength":8,"type":"string"},"ReaderStatus":{"description":"The status of the reader object gives information about the current state of the reader.\n\nPossible values:\n\n- `unknown` - The reader status is unknown.\n- `processing` - The reader is created and waits for the physical device to confirm the pairing.\n- `paired` - The reader is paired with a merchant account and can be used with SumUp APIs.\n- `expired` - The pairing is expired and no longer usable with the account. The resource needs to get recreated","enum":["unknown","processing","paired","expired"],"example":"paired","type":"string"},"Receipt":{"properties":{"acquirer_data":{"properties":{"authorization_code":{"type":"string"},"local_time":{"type":"string"},"return_code":{"type":"string"},"tid":{"type":"string"}},"type":"object"},"emv_data":{"type":"object"},"merchant_data":{"$ref":"#/components/schemas/ReceiptMerchantData"},"transaction_data":{"$ref":"#/components/schemas/ReceiptTransaction"}},"title":"Receipt","type":"object"},"ReceiptCard":{"properties":{"last_4_digits":{"description":"Card last 4 digits.","type":"string"},"type":{"description":"Card Scheme.","type":"string"}},"type":"object"},"ReceiptEvent":{"properties":{"amount":{"$ref":"#/components/schemas/AmountEvent"},"id":{"$ref":"#/components/schemas/EventID"},"receipt_no":{"type":"string"},"status":{"$ref":"#/components/schemas/EventStatus"},"timestamp":{"$ref":"#/components/schemas/TimestampEvent"},"transaction_id":{"$ref":"#/components/schemas/TransactionID"},"type":{"$ref":"#/components/schemas/EventType"}},"type":"object"},"ReceiptMerchantData":{"description":"Receipt merchant data","properties":{"locale":{"type":"string"},"merchant_profile":{"properties":{"address":{"properties":{"address_line1":{"type":"string"},"city":{"type":"string"},"country":{"type":"string"},"country_en_name":{"type":"string"},"country_native_name":{"type":"string"},"landline":{"type":"string"},"post_code":{"type":"string"}},"type":"object"},"business_name":{"type":"string"},"email":{"type":"string"},"merchant_code":{"type":"string"}},"type":"object"}},"type":"object"},"ReceiptTransaction":{"description":"Transaction information.","properties":{"amount":{"description":"Transaction amount.","type":"string"},"card":{"$ref":"#/components/schemas/ReceiptCard"},"currency":{"description":"Transaction currency.","type":"string"},"entry_mode":{"description":"Transaction entry mode.","type":"string"},"events":{"description":"Events","items":{"$ref":"#/components/schemas/ReceiptEvent"},"type":"array"},"installments_count":{"description":"Number of installments.","type":"integer"},"payment_type":{"description":"Transaction type.","type":"string"},"products":{"description":"Products","items":{"properties":{"description":{"description":"Product description.","type":"string"},"name":{"description":"Product name.","type":"string"},"price":{"description":"Product price.","format":"float","type":"number"},"quantity":{"description":"Product quantity.","type":"integer"},"total_price":{"description":"Quantity x product price.","format":"float","type":"number"}},"type":"object"},"type":"array"},"receipt_no":{"description":"Receipt number","type":"string"},"status":{"description":"Transaction processing status.","type":"string"},"timestamp":{"description":"Time created at.","format":"date-time","type":"string"},"tip_amount":{"description":"Tip amount (included in transaction amount).","type":"string"},"transaction_code":{"description":"Transaction code.","type":"string"},"vat_amount":{"description":"Transaction VAT amount.","type":"string"},"vat_rates":{"description":"Vat rates.","items":{"properties":{"gross":{"description":"Gross","format":"float","type":"number"},"net":{"description":"Net","format":"float","type":"number"},"rate":{"description":"Rate","format":"float","type":"number"},"vat":{"description":"Vat","format":"float","type":"number"}},"type":"object"},"type":"array"},"verification_method":{"description":"Cardholder verification method.","type":"string"}},"type":"object"},"TimeoffsetDetails":{"description":"TimeOffset Details","properties":{"dst":{"description":"Daylight Saving Time","type":"boolean"},"offset":{"description":"UTC offset","type":"number"},"post_code":{"description":"Postal code","type":"string"}},"type":"object"},"TimestampEvent":{"description":"Date and time of the transaction event.","format":"date-time","type":"string"},"TransactionEvent":{"description":"Details of a transaction event.","properties":{"amount":{"$ref":"#/components/schemas/AmountEvent"},"date":{"description":"Date when the transaction event occurred.","format":"date","type":"string"},"due_date":{"description":"Date when the transaction event is due to occur.","format":"date","type":"string"},"event_type":{"$ref":"#/components/schemas/EventType"},"id":{"$ref":"#/components/schemas/EventID"},"installment_number":{"description":"Consecutive number of the installment that is paid. Applicable only payout events, i.e. `event_type = PAYOUT`.","type":"integer"},"status":{"$ref":"#/components/schemas/EventStatus"},"timestamp":{"$ref":"#/components/schemas/TimestampEvent"}},"type":"object"},"TransactionFull":{"allOf":[{"$ref":"#/components/schemas/TransactionMixinBase"},{"$ref":"#/components/schemas/TransactionMixinCheckout"},{"$ref":"#/components/schemas/TransactionMixinHistory"},{"properties":{"card":{"$ref":"#/components/schemas/CardResponse"},"events":{"description":"List of events related to the transaction.","items":{"$ref":"#/components/schemas/Event"},"type":"array","uniqueItems":true},"horizontal_accuracy":{"$ref":"#/components/schemas/HorizontalAccuracy"},"lat":{"$ref":"#/components/schemas/Lat"},"links":{"description":"List of hyperlinks for accessing related resources.","items":{"anyOf":[{"$ref":"#/components/schemas/Link"},{"$ref":"#/components/schemas/LinkRefund"}]},"type":"array","uniqueItems":true},"local_time":{"description":"Local date and time of the creation of the transaction.","format":"date-time","type":"string"},"location":{"description":"Details of the payment location as received from the payment terminal.","properties":{"horizontal_accuracy":{"$ref":"#/components/schemas/HorizontalAccuracy"},"lat":{"$ref":"#/components/schemas/Lat"},"lon":{"$ref":"#/components/schemas/Lon"}},"type":"object"},"lon":{"$ref":"#/components/schemas/Lon"},"payout_type":{"description":"Payout type for the transaction.","enum":["BANK_ACCOUNT","BALANCE","PREPAID_CARD"],"type":"string"},"products":{"description":"List of products from the merchant's catalogue for which the transaction serves as a payment.","items":{"$ref":"#/components/schemas/Product"},"type":"array"},"simple_payment_type":{"description":"Simple name of the payment type.","enum":["MOTO","CASH","CC_SIGNATURE","ELV","CC_CUSTOMER_ENTERED","MANUAL_ENTRY","EMV"],"type":"string"},"simple_status":{"description":"Status generated from the processing status and the latest transaction state.","enum":["SUCCESSFUL","PAID_OUT","CANCEL_FAILED","CANCELLED","CHARGEBACK","FAILED","REFUND_FAILED","REFUNDED","NON_COLLECTION"],"type":"string"},"tax_enabled":{"description":"Indicates whether tax deduction is enabled for the transaction.","type":"boolean"},"transaction_events":{"description":"List of transaction events related to the transaction.","items":{"$ref":"#/components/schemas/TransactionEvent"},"type":"array"},"username":{"description":"Email address of the registered user (merchant) to whom the payment is made.","format":"email","type":"string"},"vat_rates":{"description":"List of VAT rates applicable to the transaction.","items":{},"type":"array"},"verification_method":{"description":"Verification method used for the transaction.","enum":["none","signature","offline pin","online pin","offline pin + signature","confirmation code verified"],"type":"string"}},"type":"object"}]},"TransactionHistory":{"allOf":[{"$ref":"#/components/schemas/TransactionMixinBase"},{"$ref":"#/components/schemas/TransactionMixinHistory"},{"properties":{"card_type":{"description":"Issuing card network of the payment card used for the transaction.","enum":["VISA","AMEX","CUP","DINERS","DISCOVER","ELO","ELV","HIPERCARD","JCB","MAESTRO","MASTERCARD","VISA_ELECTRON","VISA_VPAY","UNKNOWN"],"type":"string"},"client_transaction_id":{"description":"Client-specific ID of the transaction.","type":"string"},"transaction_id":{"$ref":"#/components/schemas/TransactionID"},"type":{"description":"Type of the transaction for the registered user specified in the `user` property.","enum":["PAYMENT","REFUND","CHARGE_BACK"],"type":"string"},"user":{"description":"Email address of the registered user (merchant) to whom the payment is made.","format":"email","type":"string"}},"type":"object"}]},"TransactionID":{"description":"Unique ID of the transaction.","type":"string"},"TransactionMixinBase":{"description":"Details of the transaction.","properties":{"amount":{"description":"Total amount of the transaction.","example":10.1,"format":"float","type":"number"},"currency":{"$ref":"#/components/schemas/Currency"},"id":{"description":"Unique ID of the transaction.","example":"6b425463-3e1b-431d-83fa-1e51c2925e99","type":"string"},"installments_count":{"description":"Current number of the installment for deferred payments.","minimum":1,"type":"integer"},"payment_type":{"description":"Payment type used for the transaction.","enum":["ECOM","RECURRING","BOLETO"],"type":"string"},"status":{"description":"Current status of the transaction.","enum":["SUCCESSFUL","CANCELLED","FAILED","PENDING"],"type":"string"},"timestamp":{"description":"Date and time of the creation of the transaction. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.","example":"2020-02-29T10:56:56.876Z","format":"date-time","type":"string"},"transaction_code":{"description":"Transaction code returned by the acquirer/processing entity after processing the transaction.","example":"TEENSK4W2K","type":"string"}},"type":"object"},"TransactionMixinCheckout":{"properties":{"auth_code":{"description":"Authorization code for the transaction sent by the payment card issuer or bank. Applicable only to card payments.","example":"053201","type":"string"},"entry_mode":{"description":"Entry mode of the payment details.","enum":["CUSTOMER_ENTRY","BOLETO"],"type":"string"},"internal_id":{"description":"Internal unique ID of the transaction on the SumUp platform.","example":1763892018,"type":"integer"},"merchant_code":{"description":"Unique code of the registered merchant to whom the payment is made.","example":"MH4H92C7","type":"string"},"tip_amount":{"description":"Amount of the tip (out of the total transaction amount).","example":3,"format":"float","type":"number"},"vat_amount":{"description":"Amount of the applicable VAT (out of the total transaction amount).","example":6,"format":"float","type":"number"}},"type":"object"},"TransactionMixinHistory":{"properties":{"payout_plan":{"description":"Payout plan of the registered user at the time when the transaction was made.","enum":["SINGLE_PAYMENT","TRUE_INSTALLMENT","ACCELERATED_INSTALLMENT"],"type":"string"},"payouts_received":{"description":"Number of payouts that are made to the registered user specified in the `user` property.","type":"integer"},"payouts_total":{"description":"Total number of payouts to the registered user specified in the `user` property.","type":"integer"},"product_summary":{"description":"Short description of the payment. The value is taken from the `description` property of the related checkout resource.","type":"string"}},"type":"object"},"VatRates":{"description":"Merchant VAT rates","properties":{"country":{"description":"Country ISO code","type":"string"},"description":{"description":"Description","type":"string"},"id":{"description":"Internal ID","type":"number"},"ordering":{"description":"Ordering","type":"number"},"rate":{"description":"Rate","type":"number"}},"type":"object"}},"securitySchemes":{"accessToken":{"description":"At SumUp authentication uses your API credentials and Basic HTTP auth. The API credentials consist of a `client_id` and `client_secret` key-value pair.\n\nIt is possible to create multiple API credentials for each of the applications you connect with your SumUp Profile.\n\nUse the API credentials as an authorization header for requests that require such.\n\nAuthorization\n---------\n\nSumUp uses the [OAuth 2.0 authorization framework](https://tools.ietf.org/html/rfc6749) and supports [two authorization flows](https://developer.sumup.com/docs/authorization/#authorization-flows) for [obtaining an access token](https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials).\n\nThe flow you choose will grant your access token-specific permissions. All API calls should include the obtained access token in the `Authorization: Bearer \u003c\u003cvalid_access_token\u003e\u003e` format.\n\nTo complete successful requests, ensure you have requested the [necessary scopes](https://developer.sumup.com/docs/authorization/#authorization-scopes) for your authorization flow of choice.\n","flows":{"authorizationCode":{"authorizationUrl":"https://api.sumup.com/authorize","refreshUrl":"https://api.sumup.com/token","scopes":{"payment_instruments":"Manage customers and their payment instruments.","payments":"Make payments by creating and processing checkouts.","transactions.history":"View transactions and transaction history.","user.app-settings":"View and manage the SumUp mobile application settings.","user.payout-settings":"View and manage your payout settings.","user.profile":"View and manage your user profile.","user.profile_readonly":"View user profile details.","user.subaccounts":"View and manage the user profile details of your employees."},"tokenUrl":"https://api.sumup.com/token"},"clientCredentials":{"scopes":{"payment_instruments":"Manage customers and their payment instruments.","payments":"Make payments by creating and processing checkouts.","transactions.history":"View transactions and transaction history.","user.app-settings":"View and manage the SumUp mobile application settings.","user.payout-settings":"View and manage your payout settings.","user.profile":"View and manage your user profile.","user.profile_readonly":"View user profile details.","user.subaccounts":"View and manage the user profile details of your employee."},"tokenUrl":"https://api.sumup.com/token"}},"type":"oauth2"}}},"info":{"description":"SumUp’s REST API operates with `application/json` HTTP requests and response. The request bodies are sent through resource-oriented URLs and use the standard HTTP response codes.\nFor testing our APIs make sure you have a SumUp Profile (you can create one [here](https://me.sumup.com)). To activate your SumUp Profile [follow these steps](https://help.sumup.com/en-GB/articles/7gSOGSm2wEwIHyAvjitrLF).\n\nOnce you have an active SumUp Profile, go to [developer.sumup.com](https://developer.sumup.com/) and click on “Create” On the top right side, click on “Profile” followed by “Test profiles” Select your business country Click “Create” Copy and store safely the user name (format: 32 characters@developers.sumup.com) and randomly generated unique password.\n\nNote: You will not be able to access your password afterwards make sure to store it safely before dismissing the message\n\nNote: SumUp merchants are able to create up to 20 test profiles\n\nWhen you receive your test profile you can create your [client credentials](https://developer.sumup.com/docs/register-app/#3-create-oauth-client-credentials) and process different requests with real payment instruments, without charging them.\nLegal note: We reserve the right to change, modify, or remove the contents of this Website and SumUp APIs at any time without notice.\n","title":"SumUp REST API","version":"1.0.0"},"openapi":"3.0.1","paths":{"/authorize":{"get":{"description":"Request authorization from users and grant your application access to resources associated with the user's profile.\n","operationId":"Authorize","parameters":[{"description":"The type of the expected response. The value must be `code` to indicate that you expect to receive an authorization code.","example":"code","in":"query","name":"response_type","schema":{"type":"string"}},{"description":"The client ID of your application that was generated when you [registered it](https://developer.sumup.com/docs/register-app/).","example":"fOcmczrYtYMJ7Li5GjMLLcUeC9dN","in":"query","name":"client_id","schema":{"type":"string"}},{"description":"The URI to which the merchant user is redirected after authorizing your application to access their user's profile data and to which the authorization code is sent. The value must match exactly one of the [registered URIs](https://developer.sumup.com/docs/register-app#3-create-oauth-client-credentials) for your application.","example":"https://sample-app.example.com/callback","in":"query","name":"redirect_uri","schema":{"type":"string"}},{"description":"A space-separated list of scopes for which you request authorization. If you don't specify any scopes in the request, your application will be granted authorization for the default scopes.","example":"payments","in":"query","name":"scope","schema":{"type":"string"}},{"description":"A unique local state that can be used for correlating requests and responses and for preventing [cross-site request forgery](https://tools.ietf.org/html/rfc6749#section-10.12).","example":"2cFCsY36y95lFHk4","in":"query","name":"state","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"NoBody":{"value":{}}},"schema":{"type":"object"}}},"description":"No Content"}},"summary":"Request authorization from users","tags":["Authorization"]}},"/token":{"post":{"description":"Generate a token or a refresh token\n","operationId":"CreateToken","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthToken"}}}},"responses":{"200":{"content":{"application/json":{"examples":{"access_token":{"description":"Successfully created access token","value":{"access_token":"565e2d19cef68203170ddadb952141326d14e03f4ccbd46daa079c26c910a864","expires_in":3600,"refresh_token":"d180031bfe9bac36c336e5746637810272546865e9c9586012f462a56f3fe9af","token_type":"Bearer"}},"refresh_token":{"description":"Successfully created access token with the refresh token","value":{"access_token":"ec410d10ad7f06d3c2598473c9cd61189abcc016900a9938068542bcf9754073","expires_in":3600,"refresh_token":"d180031bfe9bac36c336e5746637810272546865e9c9586012f462a56f3fe9af","scope":"payments user.app-settings transactions.history user.profile_readonly","token_type":"Bearer"}}},"schema":{"properties":{"access_token":{"description":"The access token that you need to use in your requests to the SumUp API.","example":"ec410d10ad7f06d3c2598473c9cd61189abcc016900a9938068542bcf9754073","type":"string"},"expires_in":{"description":"The validity of the access token in seconds.","example":3600,"type":"integer"},"refresh_token":{"description":"The refresh token provided in the request call","example":"d180031bfe9bac36c336e5746637810272546865e9c9586012f462a56f3fe9af","type":"string"},"scope":{"description":"List of authorization scopes granted to your access token.","example":"payments user.app-settings transactions.history user.profile_readonly","type":"string"},"token_type":{"description":"The type of the token. The value is always `Bearer`.","example":"Bearer","type":"string"}},"type":"object"}}},"description":"OK"},"400":{"content":{"application/json":{"examples":{"Invalid_Parameter":{"description":"A parameter is invalid or expired.","value":{"error":"invalid_grant","error_description":"code parameter invalid or expired"}},"Missing_Parameter":{"description":"A parameter is missing in the request.","value":{"error":"invalid_request","error_description":"code parameter is missing"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Bad Request"}},"summary":"Generate a token","tags":["Authorization"]}},"/v0.1/checkouts":{"get":{"description":"Lists created checkout resources according to the applied `checkout_reference`.","operationId":"ListCheckouts","parameters":[{"description":"Filters the list of checkout resources by the unique ID of the checkout.","in":"query","name":"checkout_reference","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CheckoutSuccess"},"type":"array"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"List checkouts","tags":["Checkouts"],"x-codegen":{"method_name":"list"},"x-scopes":["payments"]},"post":{"description":"Creates a new payment checkout resource. The unique `checkout_reference` created by this request, is used for further manipulation of the checkout.\n\nFor 3DS checkouts, add the `redirect_url` parameter to your request body schema.\n\nFollow by processing a checkout to charge the provided payment instrument.\n","operationId":"CreateCheckout","requestBody":{"content":{"application/json":{"examples":{"Checkout":{"description":"Standard request body for creating a checkout","value":{"amount":10.1,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","date":"2020-02-29T10:56:56+00:00","description":"Purchase","id":"2b79757a-de87-4a2e-90e4-b17c947c730d","merchant_code":"MDUDGLR9","merchant_name":"John Doe LTD","pay_to_email":"user@example.com","redirect_url":"https://sumup.com","status":"PAID"}},"Checkout3DS":{"description":"Create a 3DS checkout","value":{"amount":10.1,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","customer_id":"831ff8d4cd5958ab5670","description":"Purchase","merchant_code":"MH4H92C7","pay_to_email":"user@example.com","redirect_url":"https://mysite.com/completed_purchase","return_url":"http://example.com/"}},"CheckoutAPM":{"description":"Create an Alternative Payment Method checkout","value":{"amount":10.1,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","merchant_code":"MH4H92C7","redirect_url":"https://mysite.com/completed_purchase"}}},"schema":{"$ref":"#/components/schemas/CheckoutCreateRequest"}}}},"responses":{"201":{"content":{"application/json":{"examples":{"Checkout":{"description":"Standard response body for a successfully created checkout","value":{"amount":10.1,"checkout_reference":"8ea25ec3-3293-40e9-a165-6d7f3b3073c5","currency":"EUR","customer_id":"831ff8d4cd5958ab5670","date":"2020-02-29T10:56:56+00:00","description":"My Checkout","id":"88fcf8de-304d-4820-8f1c-ec880290eb92","mandate":{"merchant_code":"MDASYTPD","status":"active","type":"recurrent"},"merchant_code":"MCNPLE22","merchant_country":"DE","pay_to_email":"user@example.com","return_url":"http://example.com","status":"PENDING","transactions":[{"amount":10.1,"auth_code":"012345","currency":"EUR","entry_mode":"CUSTOMER_ENTRY","id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","installments_count":1,"internal_id":0,"merchant_code":"MH4H92C7","payment_type":"ECOM","status":"SUCCESSFUL","timestamp":"2020-02-29T10:56:56.876Z","tip_amount":3,"transaction_code":"TEENSK4W2K","vat_amount":6}],"valid_until":"2020-02-29T10:56:56+00:00"}},"Checkout3DS":{"description":"Response body for a successfully created 3DS checkout","value":{"amount":10.1,"checkout_reference":"8ea25ec3-3293-40e9-a165-6d7f3b3073c5","currency":"EUR","customer_id":"831ff8d4cd5958ab5670","date":"2020-02-29T10:56:56+00:00","description":"My Checkout","id":"88fcf8de-304d-4820-8f1c-ec880290eb92","pay_to_email":"user@example.com","redirect_url":"https://mysite.com/completed_purchase","return_url":"http://example.com","status":"PENDING","transactions":[{"amount":10.1,"auth_code":"012345","currency":"EUR","entry_mode":"CUSTOMER_ENTRY","id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","installments_count":1,"internal_id":0,"merchant_code":"MH4H92C7","payment_type":"ECOM","status":"SUCCESSFUL","timestamp":"2020-02-29T10:56:56.876Z","tip_amount":3,"transaction_code":"TEENSK4W2K","vat_amount":6}],"valid_until":"2020-02-29T10:56:56+00:00"}},"CheckoutAPM":{"description":"Response body for APMs, including Blik, iDeal, ...","value":{"amount":10.1,"checkout_reference":"8ea25ec3-3293-40e9-a165-6d7f3b3073c5","currency":"EUR","date":"2021-06-29T11:08:36.000+00:00","description":"My Checkout","id":"88fcf8de-304d-4820-8f1c-ec880290eb92","merchant_code":"MCNPLE22","merchant_country":"DE","merchant_name":"My company","pay_to_email":"user@example.com","purpose":"CHECKOUT","redirect_url":"https://sumup.com","return_url":"http://example.com","status":"PENDING","transactions":[{"amount":10.1,"auth_code":"012345","currency":"EUR","entry_mode":"CUSTOMER_ENTRY","id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","installments_count":1,"internal_id":0,"merchant_code":"MH4H92C7","payment_type":"ECOM","status":"SUCCESSFUL","timestamp":"2020-02-29T10:56:56.876Z","tip_amount":3,"transaction_code":"TEENSK4W2K","vat_amount":6}]}}},"schema":{"$ref":"#/components/schemas/Checkout"}}},"description":"Created"},"400":{"content":{"application/json":{"examples":{"Missing_Parameter":{"description":"A required parameter is missing.","value":{"error_code":"MISSING","message":"Validation error","param":"pay_to_email"}}},"schema":{"$ref":"#/components/schemas/ErrorExtended"}}},"description":"Bad Request"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have the required permission for making this request.","value":{"error_code":"FORBIDDEN","error_message":"checkout_payments_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"409":{"content":{"application/json":{"examples":{"Existing_Checkout":{"description":"A resource with the specified parameters already exists on the server.","value":{"error_code":"DUPLICATED_CHECKOUT","message":"Checkout with this checkout reference and pay to email already exists"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Conflict"}},"summary":"Create a checkout","tags":["Checkouts"],"x-codegen":{"method_name":"create"},"x-scopes":["payments"]}},"/v0.1/checkouts/{id}":{"delete":{"description":"Deactivates an identified checkout resource. If the checkout has already been processed it can not be deactivated.","operationId":"DeactivateCheckout","responses":{"200":{"content":{"application/json":{"examples":{"DeletedCheckout":{"description":"Response body for a successfully deactivated checkout","value":{"amount":2,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","date":"2020-02-29T10:56:56+00:00","description":"Deletion example","id":"817340ce-f1d9-4609-b90a-6152f8ee267j","merchant_code":"MH4H92C7","merchant_name":"Sample Merchant","pay_to_email":"user@example.com","purpose":"CHECKOUT","status":"EXPIRED","transactions":[],"valid_until":"2020-02-29T10:56:56+00:00"}}},"schema":{"description":"Details of the deleted checkout.","properties":{"amount":{"description":"Amount of the payment.","format":"float","type":"number"},"checkout_reference":{"description":"Unique ID of the payment checkout specified by the client application when creating the checkout resource.","maxLength":90,"type":"string"},"currency":{"$ref":"#/components/schemas/Currency"},"date":{"description":"Date and time of the creation of the payment checkout. Response format expressed according to [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) code.","example":"2020-02-29T10:56:56+00:00","format":"date-time","readOnly":true,"type":"string"},"description":{"description":"Short description of the checkout visible in the SumUp dashboard. The description can contribute to reporting, allowing easier identification of a checkout.","type":"string"},"id":{"description":"Unique ID of the checkout resource.","readOnly":true,"type":"string"},"merchant_code":{"description":"Unique identifying code of the merchant profile.","type":"string"},"merchant_country":{"description":"The merchant's country","type":"string"},"merchant_name":{"description":"Merchant name","type":"string"},"pay_to_email":{"description":"Email address of the registered user (merchant) to whom the payment is made. It is highly recommended to use `merchant_code` instead of `pay_to_email`.","format":"email","type":"string"},"purpose":{"description":"Purpose of the checkout creation initially","enum":["SETUP_RECURRING_PAYMENT","CHECKOUT"],"type":"string"},"status":{"description":"Current status of the checkout.","enum":["EXPIRED"],"readOnly":true,"type":"string"},"transactions":{"description":"List of transactions related to the payment.","items":{"allOf":[{"$ref":"#/components/schemas/TransactionMixinBase"},{"$ref":"#/components/schemas/TransactionMixinCheckout"}]},"readOnly":true,"type":"array","uniqueItems":true},"valid_until":{"description":"Date and time of the checkout expiration before which the client application needs to send a processing request. If no value is present, the checkout does not have an expiration time.","example":"2020-02-29T10:56:56+00:00","format":"date-time","nullable":true,"readOnly":true,"type":"string"}},"type":"object"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"},"409":{"content":{"application/json":{"examples":{"Checkout_Processed":{"description":"The identified checkout resource is already processed.","value":{"error_code":"CHECKOUT_PROCESSED","message":"Checkout is already processed"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Conflict"}},"summary":"Deactivate a checkout","tags":["Checkouts"],"x-codegen":{"method_name":"deactivate"},"x-scopes":["payments"]},"get":{"description":"Retrieves an identified checkout resource. Use this request after processing a checkout to confirm its status and inform the end user respectively.","operationId":"GetCheckout","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckoutSuccess"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Retrieve a checkout","tags":["Checkouts"],"x-codegen":{"method_name":"get"},"x-scopes":["payments"]},"parameters":[{"description":"Unique ID of the checkout resource.","in":"path","name":"id","required":true,"schema":{"type":"string"}}],"put":{"description":"Processing a checkout will attempt to charge the provided payment instrument for the amount of the specified checkout resource initiated in the `Create a checkout` endpoint.\n\nFollow this request with `Retrieve a checkout` to confirm its status.\n","operationId":"ProcessCheckout","requestBody":{"content":{"application/json":{"examples":{"ProcessBancontact":{"description":"Process a checkout with Bancontact","value":{"payment_type":"bancontact","personal_details":{"address":{"country":"BE"},"email":"user@example.com","first_name":"John","last_name":"Doe"}}},"ProcessBoleto":{"description":"Process a checkout with Boleto","value":{"payment_type":"boleto","personal_details":{"address":{"city":"São Paulo","country":"BR","line1":"Rua Gilberto Sabino, 215","postal_code":"05425-020","state":"SP"},"email":"user@example.com","first_name":"John","last_name":"Doe","tax_id":"423.378.593-47"}}},"ProcessCard":{"description":"Process a checkout with a card","value":{"card":{"cvv":"123","expiry_month":"01","expiry_year":"2023","last_4_digits":"3456","name":"John Doe","number":"1234567890123456","type":"VISA","zip_code":"12345"},"installments":1,"mandate":{"type":"recurrent","user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.104 Safari/537.36","user_ip":"172.217.169.174"},"payment_type":"card"}},"ProcessToken":{"description":"Process a checkout with a token","value":{"customer_id":"MEDKHDTI","installments":1,"payment_type":"card","token":"ba85dfee-c3cf-48a6-84f5-d7d761fbba50"}},"ProcessiDeal":{"description":"Process a checkout with iDeal","value":{"payment_type":"ideal","personal_details":{"address":{"country":"NL"},"email":"user@example.com","first_name":"John","last_name":"Doe"}}}},"schema":{"$ref":"#/components/schemas/CheckoutProcessMixin"}}},"description":"Details of the payment instrument for processing the checkout."},"responses":{"200":{"content":{"application/json":{"examples":{"CheckoutSuccessBancontact":{"description":"Successfully processed checkout with Bancontact","value":{"next_step":{"full":"https://r3.girogate.de/ti/simbcmc?tx=624788471\u0026rs=5MioXoKt2Gwj9dLgqAX1bMRBuT5xTSdB\u0026cs=697edacdd9175f3f99542500fa0ff08280b66aaff3c2641a2e212e4b039473cc","mechanism":["browser"],"method":"GET","payload":{"cs":"697edacdd9175f3f99542500fa0ff08280b66aaff3c2641a2e212e4b039473cc","rs":"5MioXoKt2Gwj9dLgqAX1bMRBuT5xTSdB","tx":"624788471"},"url":"https://r3.girogate.de/ti/simbcmc"}}},"CheckoutSuccessBoleto":{"description":"Successfully processed checkout with Boleto","value":{"amount":10.1,"boleto":{"barcode":"34191090081790614310603072340007886840000000200","url":"https://checkouts.sample.com/v0.1/checkouts/2e7a36cc-7897-446b-a966-952ab5f049ea/boleto"},"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"BRL","date":"2021-07-06T12:34:02.000+00:00","description":"Boleto checkout","id":"4e425463-3e1b-431d-83fa-1e51c2925e99","merchant_code":"MH4H92C7","merchant_name":"Sample shop","pay_to_email":"user@example.com","purpose":"CHECKOUT","redirect_url":"https://website.com","status":"PENDING","transactions":[{"amount":10.1,"currency":"BRL","entry_mode":"BOLETO","id":"debd2986-9852-4e86-8a8e-7ea9c87dd679","installments_count":1,"internal_id":1763892018,"merchant_code":"MH4H92C9","payment_type":"BOLETO","status":"PENDING","timestamp":"2021-07-06T12:34:16.460+00:00","tip_amount":3,"transaction_code":"TEN3E696NP","vat_amount":6}]}},"CheckoutSuccessCard":{"description":"Successfully processed checkout with a card","value":{"amount":10.1,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","customer_id":"831ff8d4cd5958ab5670","date":"2020-02-29T10:56:56+00:00","description":"Purchase","id":"4e425463-3e1b-431d-83fa-1e51c2925e99","mandate":{"merchant_code":"MDASYTPD","status":"active","type":"recurrent"},"merchant_code":"MH4H92C7","pay_to_email":"user@example.com","return_url":"http://example.com","status":"PENDING","transaction_code":"TEENSK4W2K","transaction_id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","transactions":[{"amount":10.1,"auth_code":"053201","currency":"EUR","entry_mode":"CUSTOMER_ENTRY","id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","installments_count":1,"internal_id":1763892018,"merchant_code":"MH4H92C7","payment_type":"ECOM","status":"SUCCESSFUL","timestamp":"2020-02-29T10:56:56.876Z","tip_amount":3,"transaction_code":"TEENSK4W2K","vat_amount":6}],"valid_until":"2020-02-29T10:56:56+00:00"}},"CheckoutSuccessToken":{"description":"Successfully processed checkout with a token","value":{"amount":10.1,"checkout_reference":"f00a8f74-b05d-4605-bd73-2a901bae5802","currency":"EUR","customer_id":"831ff8d4cd5958ab5670","date":"2020-02-29T10:56:56+00:00","description":"Purchase with token","id":"4e425463-3e1b-431d-83fa-1e51c2925e99","merchant_code":"MH4H92C7","merchant_name":"Sample Merchant","pay_to_email":"user@example.com","payment_instrument":{"token":"e76d7e5c-9375-4fac-a7e7-b19dc5302fbc"},"redirect_url":"https://mysite.com/completed_purchase","status":"PENDING","transaction_code":"TEENSK4W2K","transaction_id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","transactions":[{"amount":10.1,"auth_code":"053201","currency":"EUR","entry_mode":"CUSTOMER_ENTRY","id":"410fc44a-5956-44e1-b5cc-19c6f8d727a4","installments_count":1,"internal_id":1763892018,"merchant_code":"MH4H92C7","payment_type":"ECOM","status":"SUCCESSFUL","timestamp":"2020-02-29T10:56:56.876Z","tip_amount":3,"transaction_code":"TEENSK4W2K","vat_amount":6}]}},"CheckoutSuccessiDeal":{"description":"Successfully processed checkout with iDeal","value":{"next_step":{"full":"https://r3.girogate.de/ti/simideal?tx=961473700\u0026rs=ILnaUeQTKJ184fVrjGILrLjePX9E4rmz\u0026cs=c8bc0ea231f8372431ca22d6f8319f8de0263d0b1705759ed27155f245f193c5","mechanism":["browser"],"method":"GET","payload":{"cs":"c8bc0ea231f8372431ca22d6f8319f8de0263d0b1705759ed27155f245f193c5","rs":"ILnaUeQTKJ184fVrjGILrLjePX9E4rmz","tx":"961473700"},"url":"https://r3.girogate.de/ti/simideal"}}}},"schema":{"$ref":"#/components/schemas/CheckoutSuccess"}}},"description":"OK"},"400":{"content":{"application/json":{"examples":{"Invalid_Parameter":{"description":"A required parameter has an invalid value.","value":{"error_code":"INVALID","message":"Validation error","param":"card.expiry_year"}},"Multiple_Invalid_Parameters":{"description":"Multiple required parameters have invalid values.","value":[{"error_code":"INVALID","message":"Validation error","param":"card.name"},{"error_code":"INVALID","message":"Validation error","param":"card.number"},{"error_code":"INVALID","message":"Validation error","param":"card.expiry_year"}]}},"schema":{"oneOf":[{"$ref":"#/components/schemas/ErrorExtended"},{"description":"List of error messages.","items":{"$ref":"#/components/schemas/ErrorExtended"},"type":"array"}]}}},"description":"Bad Request"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"},"409":{"content":{"application/json":{"examples":{"Checkout_Processed":{"description":"The identified checkout resource is already processed.","value":{"error_code":"CHECKOUT_PROCESSED","message":"Checkout is already processed"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Conflict"}},"summary":"Process a checkout","tags":["Checkouts"],"x-codegen":{"method_name":"process"}}},"/v0.1/customers":{"post":{"description":"Creates a new saved customer resource which you can later manipulate and save payment instruments to.","operationId":"CreateCustomer","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}},"description":"Details of the customer."},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}},"description":"Created"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"409":{"content":{"application/json":{"examples":{"Existing_Customer":{"description":"A resource with the specified identifier already exists on the server.","value":{"error_code":"CUSTOMER_ALREADY_EXISTS","message":"Customer already exists"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Conflict"}},"summary":"Create a customer","tags":["Customers"],"x-codegen":{"method_name":"create"},"x-scopes":["payment_instruments"]}},"/v0.1/customers/{customer_id}":{"get":{"description":"Retrieves an identified saved customer resource through the unique `customer_id` parameter, generated upon customer creation.","operationId":"GetCustomer","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}},"description":"Created"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Retrieve a customer","tags":["Customers"],"x-codegen":{"method_name":"get"},"x-scopes":["payment_instruments"]},"parameters":[{"description":"Unique ID of the saved customer resource.","in":"path","name":"customer_id","required":true,"schema":{"type":"string"}}],"put":{"description":"Updates an identified saved customer resource's personal details.\n\nThe request only overwrites the parameters included in the request, all other parameters will remain with their initially assigned values.\n","operationId":"UpdateCustomer","requestBody":{"content":{"application/json":{"schema":{"properties":{"personal_details":{"$ref":"#/components/schemas/PersonalDetails"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}},"description":"Created"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Update a customer","tags":["Customers"],"x-codegen":{"method_name":"update"},"x-scopes":["payment_instruments"]}},"/v0.1/customers/{customer_id}/payment-instruments":{"get":{"description":"Lists all payment instrument resources that are saved for an identified customer.","operationId":"ListPaymentInstruments","responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PaymentInstrumentResponse"},"type":"array"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"List payment instruments","tags":["Customers"],"x-codegen":{"method_name":"list_payment_instruments"},"x-scopes":["payment_instruments"]},"parameters":[{"description":"Unique ID of the saved customer resource.","in":"path","name":"customer_id","required":true,"schema":{"type":"string"}}]},"/v0.1/customers/{customer_id}/payment-instruments/{token}":{"delete":{"description":"Deactivates an identified card payment instrument resource for a customer.","operationId":"DeactivatePaymentInstrument","responses":{"204":{"content":{"application/json":{"examples":{"NoBody":{"value":{}}},"schema":{"type":"object"}}},"description":"No Content"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Deactivate a payment instrument","tags":["Customers"],"x-codegen":{"method_name":"deactivate_payment_instrument"},"x-scopes":["payment_instruments"]},"parameters":[{"description":"Unique ID of the saved customer resource.","in":"path","name":"customer_id","required":true,"schema":{"type":"string"}},{"description":"Unique token identifying the card saved as a payment instrument resource.","in":"path","name":"token","required":true,"schema":{"type":"string"}}]},"/v0.1/me":{"get":{"description":"Returns user profile information.","operationId":"GetAccount","parameters":[{"description":"A list of additional information you want to receive for the user. By default only personal and merchant profile information will be returned.","in":"query","name":"include[]","schema":{"items":{"enum":["settings","doing_business_as","bank_accounts","app_settings","country_details"],"type":"string"},"type":"array"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantAccount"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"Retrieve a profile","tags":["Merchant"],"x-codegen":{"method_name":"get"},"x-scopes":["user.profile","user.profile_readonly"]}},"/v0.1/me/accounts":{"get":{"deprecated":true,"description":"Returns list of operators for currently authorized user's merchant.","operationId":"ListSubAccounts","parameters":[{"description":"Search query used to filter users that match given query term.\n\nCurrent implementation allow querying only over the email address.\nAll operators whos email address contains the query string are returned.\n","in":"query","name":"query","schema":{"type":"string"}},{"description":"If true the list of operators will include also the primary user.","in":"query","name":"include_primary","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Operator"},"type":"array"}}},"description":"List of operators."}},"summary":"List operators.","tags":["Subaccounts"],"x-permissions":["members_list"],"x-scopes":[]},"post":{"deprecated":true,"description":"Creates new operator for currently authorized users' merchant.","operationId":"CreateSubAccount","requestBody":{"content":{"application/json":{"schema":{"properties":{"nickname":{"example":"Operator 1","type":"string"},"password":{"example":"correct horse batter staple","minLength":8,"type":"string"},"permissions":{"properties":{"create_moto_payments":{"type":"boolean"},"create_referral":{"type":"boolean"},"full_transaction_history_view":{"type":"boolean"},"refund_transactions":{"type":"boolean"}},"type":"object"},"username":{"example":"operator1@mydomain.com","format":"email","type":"string"}},"required":["username","password"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Newly created operator."},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompatError"}}},"description":"error response for compat API calls"}},"summary":"Create operator.","tags":["Subaccounts"],"x-permissions":["members_update"],"x-scopes":[]}},"/v0.1/me/accounts/{operator_id}":{"delete":{"deprecated":true,"operationId":"DeactivateSubAccount","parameters":[{"in":"path","name":"operator_id","required":true,"schema":{"format":"int32","type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Operator successfully disabled."}},"summary":"Disable operator.","tags":["Subaccounts"],"x-permissions":["members_delete"],"x-scopes":[]},"get":{"deprecated":true,"description":"Returns specific operator.","operationId":"CompatGetOperator","parameters":[{"in":"path","name":"operator_id","required":true,"schema":{"format":"int32","type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Operator."}},"summary":"Get operator","tags":["Subaccounts"],"x-permissions":["members_view"],"x-scopes":[]},"put":{"deprecated":true,"description":"Updates operator. If the operator was disabled and their password is updated they will be unblocked.","operationId":"UpdateSubAccount","parameters":[{"in":"path","name":"operator_id","required":true,"schema":{"format":"int32","type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"disabled":{"type":"boolean"},"nickname":{"example":"Operator 1","type":"string"},"password":{"example":"correct horse batter staple","minLength":8,"type":"string"},"permissions":{"properties":{"create_moto_payments":{"type":"boolean"},"create_referral":{"type":"boolean"},"full_transaction_history_view":{"type":"boolean"},"refund_transactions":{"type":"boolean"}},"type":"object"},"username":{"format":"email","maxLength":256,"type":"string"}},"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Updated operator."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompatError"}}},"description":"Invalid Operators' email or password was already used."}},"summary":"Update operator.","tags":["Subaccounts"],"x-permissions":["members_update"],"x-scopes":[]}},"/v0.1/me/accounts/{operator_id}/disable":{"post":{"deprecated":true,"operationId":"CompatDisableOperator","parameters":[{"in":"path","name":"operator_id","required":true,"schema":{"format":"int32","type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Operator successfully disabled."}},"summary":"Disable operator.","tags":["Subaccounts"],"x-permissions":["members_write"],"x-scopes":[]}},"/v0.1/me/accounts/{operator_id}/reset":{"put":{"deprecated":true,"description":"Changes operators password, if the operator was disabled they will be unblocked.","operationId":"CompatChangeOperatorsPassword","parameters":[{"in":"path","name":"operator_id","required":true,"schema":{"format":"int32","type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"password":{"example":"correct horse batter staple","minLength":8,"type":"string"}},"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Operator"}}},"description":"Operators' password successfully changed."},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CompatError"}}},"description":"Operators' password was already used."}},"summary":"Change operators password.","tags":["Subaccounts"],"x-permissions":["members_write"],"x-scopes":[]}},"/v0.1/me/financials/payouts":{"get":{"description":"Lists ordered payouts for the merchant profile.","operationId":"ListPayouts","parameters":[{"description":"Start date (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"start_date","required":true,"schema":{"format":"date","type":"string"}},{"description":"End date (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"end_date","required":true,"schema":{"format":"date","type":"string"}},{"in":"query","name":"format","schema":{"enum":["json","csv"],"type":"string"}},{"in":"query","name":"limit","schema":{"type":"integer"}},{"in":"query","name":"order","schema":{"enum":["desc","asc"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FinancialPayouts"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"List payouts","tags":["Payouts"],"x-codegen":{"method_name":"list"},"x-scopes":["user.profile","user.profile_readonly"]}},"/v0.1/me/merchant-profile":{"get":{"description":"Retrieves merchant profile data.","operationId":"GetMerchantProfile","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantProfile"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"}},"summary":"Retrieve a merchant profile","tags":["Merchant"],"x-codegen":{"method_name":"get_merchant_profile"},"x-scopes":["user.profile","user.profile_readonly"]}},"/v0.1/me/merchant-profile/bank-accounts":{"get":{"deprecated":true,"description":"Retrieves bank accounts of the merchant.","operationId":"ListBankAccounts","parameters":[{"description":"If true only the primary bank account (the one used for payouts) will be returned.","in":"query","name":"primary","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BankAccount"},"type":"array"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"}},"summary":"List bank accounts","tags":["Merchant"],"x-codegen":{"method_name":"list_bank_accounts_deprecated"},"x-scopes":["user.payout-settings","user.profile","user.profile_readonly"]}},"/v0.1/me/merchant-profile/doing-business-as":{"get":{"description":"Retrieves Doing Business As profile.","operationId":"GetDoingBusinessAs","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DoingBusinessAs"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"Retrieve DBA","tags":["Merchant"],"x-codegen":{"method_name":"get_doing_business_as"},"x-scopes":["user.profile","user.profile_readonly"]}},"/v0.1/me/merchant-profile/settings":{"get":{"description":"Retrieves merchant settings.","operationId":"GetSettings","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantSettings"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"}},"summary":"Get settings","tags":["Merchant"],"x-codegen":{"method_name":"get_settings"},"x-scopes":["user.payout-settings"]}},"/v0.1/me/personal-profile":{"get":{"description":"Retrieves personal profile data.","operationId":"GetPersonalProfile","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonalProfile"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"Retrieve a personal profile","tags":["Merchant"],"x-codegen":{"method_name":"get_personal_profile"},"x-scopes":["user.profile","user.profile_readonly"]}},"/v0.1/me/refund/{txn_id}":{"parameters":[{"description":"Unique ID of the transaction.","in":"path","name":"txn_id","required":true,"schema":{"type":"string"}}],"post":{"description":"Refunds an identified transaction either in full or partially.","operationId":"RefundTransaction","requestBody":{"content":{"application/json":{"schema":{"description":"Optional amount for partial refunds of transactions.","properties":{"amount":{"description":"Amount to be refunded. Eligible amount can't exceed the amount of the transaction and varies based on country and currency. If you do not specify a value, the system performs a full refund of the transaction.","format":"float","type":"number"}},"type":"object"}}}},"responses":{"204":{"content":{"application/json":{"examples":{"NoBody":{"value":{}}},"schema":{"type":"object"}}},"description":"No Content"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"},"409":{"content":{"application/json":{"examples":{"Transaction_Not_Refundable":{"description":"The state of the identified transaction resource does not permit the requested operation.","value":{"error_code":"CONFLICT","message":"The transaction is not refundable in its current state"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Conflict"}},"summary":"Refund a transaction","tags":["Transactions"],"x-codegen":{"method_name":"refund"},"x-scopes":["payments"]}},"/v0.1/me/transactions":{"get":{"deprecated":true,"description":"Retrieves the full details of an identified transaction. The transaction resource is identified by a query parameter and *one* of following parameters is required:\n *  `id`\n *  `internal_id`\n *  `transaction_code`\n *  `foreign_transaction_id`\n *  `client_transaction_id`\n","operationId":"GetTransaction","parameters":[{"description":"Retrieves the transaction resource with the specified transaction ID (the `id` parameter in the transaction resource).","in":"query","name":"id","schema":{"type":"string"}},{"description":"Retrieves the transaction resource with the specified internal transaction ID (the `internal_id` parameter in the transaction resource).","in":"query","name":"internal_id","schema":{"type":"string"}},{"description":"Retrieves the transaction resource with the specified transaction code.","in":"query","name":"transaction_code","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionFull"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Retrieve a transaction","tags":["Transactions"],"x-codegen":{"method_name":"get_deprecated"},"x-scopes":["transactions.history"]}},"/v0.1/me/transactions/history":{"get":{"deprecated":true,"description":"Lists detailed history of all transactions associated with the merchant profile.","operationId":"ListTransactions","parameters":[{"description":"Retrieves the transaction resource with the specified transaction code.","in":"query","name":"transaction_code","schema":{"type":"string"}},{"description":"Specifies the order in which the returned results are displayed.","in":"query","name":"order","schema":{"default":"ascending","enum":["ascending","descending"],"type":"string"}},{"description":"Specifies the maximum number of results per page. Value must be a positive integer and if not specified, will return 10 results.","in":"query","name":"limit","schema":{"type":"integer"}},{"description":"Filters the returned results by user email.","in":"query","name":"users","schema":{"items":{"format":"email","type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of final statuses of the transactions.","in":"query","name":"statuses","schema":{"items":{"enum":["SUCCESSFUL","CANCELLED","FAILED","REFUNDED","CHARGE_BACK"],"type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of payment types used for the transactions.","in":"query","name":"payment_types","schema":{"items":{"enum":["CASH","POS","ECOM","BALANCE","MOTO","BOLETO","UNKNOWN"],"type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of transaction types.","in":"query","name":"types","schema":{"items":{"enum":["PAYMENT","REFUND","CHARGE_BACK"],"type":"string"},"type":"array"}},{"description":"Filters the results by the latest modification time of resources and returns only transactions that are modified *at or after* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"changes_since","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the creation time of resources and returns only transactions that are created *before* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"newest_time","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the reference ID of transaction events and returns only transactions with events whose IDs are *smaller* than the specified value. This parameters supersedes the `newest_time` parameter (if both are provided in the request).","in":"query","name":"newest_ref","schema":{"type":"string"}},{"description":"Filters the results by the creation time of resources and returns only transactions that are created *at or after* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"oldest_time","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the reference ID of transaction events and returns only transactions with events whose IDs are *greater* than the specified value. This parameters supersedes the `oldest_time` parameter (if both are provided in the request).","in":"query","name":"oldest_ref","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"items":{"items":{"$ref":"#/components/schemas/TransactionHistory"},"type":"array"},"links":{"items":{"$ref":"#/components/schemas/Link"},"type":"array"}},"type":"object"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"List transactions","tags":["Transactions"],"x-codegen":{"method_name":"list_deprecated"},"x-scopes":["transactions.history"]}},"/v0.1/merchants/{merchant_code}/api-keys":{"get":{"description":"Returns paginated list of API keys.\n","operationId":"ListAPIKeys","parameters":[{"description":"Offset of the first key to return.","in":"query","name":"offset","schema":{"default":0,"example":0,"minimum":0,"type":"integer"}},{"description":"Maximum number of keys to return.","in":"query","name":"limit","schema":{"default":10,"example":10,"maximum":25,"minimum":1,"type":"integer"}},{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIKeysList"}}},"description":"List of API keys."}},"summary":"List API keys","tags":["API Keys"],"x-permissions":["api_keys_list"],"x-scopes":["api_keys"]},"post":{"description":"Creates a new API key for the user.\n","operationId":"CreateAPIKey","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"name":{"example":"New Key Name","maxLength":255,"type":"string"},"scopes":{"$ref":"#/components/schemas/OAuth2Scopes"}},"required":["name","scopes"],"type":"object"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIKey"}}},"description":"Created API key."}},"summary":"Create an API key","tags":["API Keys"],"x-permissions":["api_keys_create"],"x-scopes":["api_keys:write"]}},"/v0.1/merchants/{merchant_code}/api-keys/{key_id}":{"delete":{"description":"Revokes an API key.\n","operationId":"RevokeAPIKey","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"key_id","required":true,"schema":{"example":"sup_pk_1tpmgSzNUHMkxZD1Kz2hdQorZAav6AcZ9","type":"string"}}],"responses":{"204":{"description":"Successful revocation."}},"summary":"Revoke an API key","tags":["API Keys"],"x-permissions":["api_keys_delete"],"x-scopes":["api_keys:write"]},"get":{"description":"Gets an API key.\n","operationId":"GetAPIKey","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"key_id","required":true,"schema":{"example":"sup_pk_1tpmgSzNUHMkxZD1Kz2hdQorZAav6AcZ9","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIKey"}}},"description":"API key."}},"summary":"Retrieve an API Key","tags":["API Keys"],"x-permissions":["api_keys_view"],"x-scopes":["api_keys"]},"put":{"description":"Updates an API key.\n","operationId":"UpdateAPIKey","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"key_id","required":true,"schema":{"example":"sup_pk_1tpmgSzNUHMkxZD1Kz2hdQorZAav6AcZ9","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"name":{"description":"New name for the API key.","example":"My API Key","maxLength":255,"type":"string"},"scopes":{"$ref":"#/components/schemas/OAuth2Scopes"}},"required":["name","scopes"],"type":"object"}}},"required":true},"responses":{"204":{"description":"Successful update."}},"summary":"Update an API key","tags":["API Keys"],"x-permissions":["api_keys_update"],"x-scopes":["api_keys:write"]}},"/v0.1/merchants/{merchant_code}/members":{"get":{"description":"Lists merchant members with their roles and permissions.\n","operationId":"ListMerchantMembers","parameters":[{"description":"Offset of the first member to return.","in":"query","name":"offset","schema":{"default":0,"example":0,"minimum":0,"type":"integer"}},{"description":"Maximum number of member to return.","in":"query","name":"limit","schema":{"default":10,"example":10,"maximum":25,"minimum":1,"type":"integer"}},{"description":"Indicates to skip count query.","in":"query","name":"scroll","schema":{"default":false,"example":true,"type":"boolean"}},{"description":"Filter the returned users by email address prefix.","in":"query","name":"email","schema":{"example":"user","type":"string"}},{"description":"Filter the returned members by the membership status.","in":"query","name":"status","schema":{"$ref":"#/components/schemas/MembershipStatus"}},{"description":"Filter the returned users by role.","explode":true,"in":"query","name":"roles","schema":{"example":["role_employee","role_accountant"],"items":{"type":"string"},"type":"array"},"style":"form"},{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Member"},"type":"array"},"total_count":{"example":3,"type":"integer"}},"required":["items"],"type":"object"}}},"description":"List of members."},"404":{"description":"Merchant not found."}},"summary":"List members","tags":["Members"],"x-scopes":[]},"post":{"operationId":"AddMerchantMember","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"attributes":{"$ref":"#/components/schemas/Attributes"},"email":{"description":"Email address of the member to add.","format":"email","type":"string"},"is_managed_user":{"description":"True if the user is managed by the merchant. In this case, we'll created a virtual user with the provided password and nickname.\n","type":"boolean"},"metadata":{"$ref":"#/components/schemas/Metadata"},"nickname":{"description":"Nickname of the member to add. Only used if `is_managed_user` is true. Used for display purposes only.\n","example":"Test User","type":"string"},"password":{"description":"Password of the member to add. Only used if `is_managed_user` is true.","format":"password","minLength":8,"type":"string"},"roles":{"description":"List of roles to assign to the new member.","items":{"type":"string"},"type":"array"}},"required":["email","roles"],"type":"object"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Member"}}},"description":"Member created."},"400":{"description":"Invalid request."},"404":{"description":"Merchant not found."},"429":{"description":"Too many invitations sent to that user. The limit is 10 requests per 5 minutes and the Retry-After header is set to the number of minutes until the reset of the limit.\n"}},"summary":"Add member to merchant.","tags":["Members"],"x-permissions":["members_create"],"x-scopes":[]}},"/v0.1/merchants/{merchant_code}/members/{member_id}":{"delete":{"description":"Deletes member by ID.","operationId":"DeleteMerchantMember","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"member_id","required":true,"schema":{"example":"mem_WZsm7QTPhVrompscmPhoGTXXcrd58fr9MOhP","type":"string"}}],"responses":{"200":{"description":"Member deleted."},"404":{"description":"Merchant or member not found."}},"summary":"Delete member","tags":["Members"],"x-permissions":["members_delete"],"x-scopes":[]},"get":{"description":"Returns merchant member details.","operationId":"GetMerchantMember","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"member_id","required":true,"schema":{"example":"mem_WZsm7QTPhVrompscmPhoGTXXcrd58fr9MOhP","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Member"}}},"description":"Merchant member."},"404":{"description":"Merchant or member not found."}},"summary":"Get merchant member","tags":["Members"],"x-permissions":["members_view"],"x-scopes":[]},"put":{"description":"Update assigned roles of the member.","operationId":"UpdateMerchantMember","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"in":"path","name":"member_id","required":true,"schema":{"example":"mem_WZsm7QTPhVrompscmPhoGTXXcrd58fr9MOhP","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"attributes":{"$ref":"#/components/schemas/Attributes"},"metadata":{"$ref":"#/components/schemas/Metadata"},"roles":{"items":{"type":"string"},"type":"array"},"user":{"description":"Allows you to update user data of managed users.","properties":{"nickname":{"description":"User's preferred name. Used for display purposes only.\n","example":"Test User","type":"string"},"password":{"description":"Password of the member to add. Only used if `is_managed_user` is true.","format":"password","minLength":8,"type":"string"}},"type":"object"}},"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Member"}}},"description":"Member updated."},"400":{"description":"Cannot set password or nickname for an invited user."},"403":{"description":"Cannot change password for managed user. Password was already used before."},"404":{"description":"Merchant or member not found."},"409":{"description":"Cannot update member as some data conflict with existing members."}},"summary":"Update merchant member","tags":["Members"],"x-permissions":["members_update"],"x-scopes":[]}},"/v0.1/merchants/{merchant_code}/payment-methods":{"get":{"description":"Get payment methods available for the given merchant to use with a checkout.","operationId":"GetPaymentMethods","parameters":[{"description":"The SumUp merchant code.","in":"path","name":"merchant_code","required":true,"schema":{"example":"M1234","type":"string"}},{"description":"The amount for which the payment methods should be eligible, in major units. Note that currency must also be provided when filtering by amount.","in":"query","name":"amount","schema":{"example":9.99,"type":"number"}},{"description":"The currency for which the payment methods should be eligible.","in":"query","name":"currency","schema":{"example":"EUR","type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"success":{"description":"Available payment methods","value":{"available_payment_methods":[{"id":"apple_pay"},{"id":"blik"}]}}},"schema":{"properties":{"available_payment_methods":{"items":{"properties":{"id":{"description":"The ID of the payment method.","example":"qr_code_pix","type":"string"}},"required":["id"],"type":"object"},"type":"array"}},"type":"object"}}},"description":"Available payment methods"},"400":{"content":{"application/json":{"examples":{"Invalid_Parameter":{"description":"One or more of the parameters are invalid.","value":{"failed_constraints":[{"message":"Currency must also be specified when filtering by amount","reference":"currency"}],"status":400,"title":"Bad Request"}}},"schema":{"$ref":"#/components/schemas/DetailsError"}}},"description":"Bad Request"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"Get available payment methods","tags":["Checkouts"],"x-codegen":{"method_name":"list_available_payment_methods"},"x-scopes":["payments"]}},"/v0.1/merchants/{merchant_code}/readers":{"get":{"description":"Returns list of all readers of the merchant.\n","operationId":"ListReaders","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"items":{"items":{"$ref":"#/components/schemas/Reader"},"type":"array"}},"required":["items"],"type":"object"}}},"description":"List of readers\n"}},"summary":"List Readers","tags":["Readers"],"x-codegen":{"method_name":"list"},"x-permissions":["readers_list"],"x-scopes":["readers.read"]},"post":{"description":"Create a new reader linked to the merchant account.\n","operationId":"CreateReader","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"meta":{"$ref":"#/components/schemas/Meta"},"name":{"$ref":"#/components/schemas/ReaderName"},"pairing_code":{"$ref":"#/components/schemas/ReaderPairingCode"}},"required":["pairing_code"],"type":"object"}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"created":{"$ref":"#/components/examples/CreatedReader"}},"schema":{"$ref":"#/components/schemas/Reader"}}},"description":"The reader got created.\n","links":{"DeleteReaderByID":{"$ref":"#/components/links/DeleteReaderByID"},"UpdateReaderByID":{"$ref":"#/components/links/UpdateReaderByID"}}}},"summary":"Create a Reader","tags":["Readers"],"x-codegen":{"method_name":"create"},"x-permissions":["readers_create"],"x-scopes":["readers.write"]}},"/v0.1/merchants/{merchant_code}/readers/{id}":{"delete":{"description":"Deletes a Reader.\n","operationId":"DeleteReader","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"The unique identifier of the reader.\n","in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/ReaderID"}}],"responses":{"200":{"description":"The reader got successfully deleted from the merchant account.\n"}},"summary":"Delete a reader","tags":["Readers"],"x-permissions":["readers_delete"],"x-scopes":["readers.write"]},"get":{"description":"Gets a Reader.\n","operationId":"GetReader","parameters":[{"description":"Return the reader only if it has been modified after the specified timestamp given in the headers.\n\nTimestamps are accepted in the following formats:\n - HTTP Standard: [IMF format (RFC 5322)](https://www.rfc-editor.org/rfc/rfc5322#section-3.3), sometimes also referred to as [RFC 7231](https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1).\n - RFC 3339: Used for timestamps in JSON payloads on this API.\n","in":"header","name":"If-Modified-Since","schema":{"oneOf":[{"example":"Tue, 03 May 2022 14:46:44 GMT","format":"httpdate","type":"string"},{"example":"2023-05-30T10:38:01+00:00","format":"date-time","type":"string"}],"type":"string"}},{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"The unique identifier of the reader.\n","in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/ReaderID"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reader"}}},"description":"Reader object got returned.\n"},"400":{"description":"Malformed request."},"404":{"description":"The requested Reader resource does not exists.\n"}},"summary":"Retrieve a Reader","tags":["Readers"],"x-codegen":{"method_name":"get"},"x-permissions":["readers_view"],"x-scopes":["readers.read"]},"patch":{"description":"Updates a Reader.\n","operationId":"UpdateReader","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"The unique identifier of the reader.\n","in":"path","name":"id","required":true,"schema":{"$ref":"#/components/schemas/ReaderID"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"meta":{"$ref":"#/components/schemas/Meta"},"name":{"$ref":"#/components/schemas/ReaderName"}},"type":"object"}}},"required":true},"responses":{"304":{"description":"The update request was successful, but the reader didn't get updated.\n"},"403":{"description":"The reader is not linked to the merchant account.\n"}},"summary":"Update a Reader","tags":["Readers"],"x-codegen":{"method_name":"update"},"x-permissions":["readers_update"],"x-scopes":["readers.write"]}},"/v0.1/merchants/{merchant_code}/readers/{id}/checkout":{"post":{"callbacks":{"ReaderCheckoutStatusChange":{"{$request.body#/return_url}":{"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReaderCheckoutStatusChange"}}}},"responses":{"200":{"description":"Your server returns this code if it accepts the callback.\nIf the server returns any other code, the callback will be retried up to 5 times with exponential backoff.\n"}}}}}},"description":"Create a Checkout for a Reader.\n\nThis process is asynchronous and the actual transaction may take some time to be stared on the device.\n\n\nThere are some caveats when using this endpoint:\n* The target device must be online, otherwise checkout won't be accepted\n* After the checkout is accepted, the system has 60 seconds to start the payment on the target device. During this time, any other checkout for the same device will be rejected.\n\n**Note**: If the target device is a Solo, it must be in version 3.3.24.3 or higher.\n","operationId":"CreateReaderCheckout","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"The unique identifier of the reader.\n","in":"path","name":"id","required":true,"schema":{"example":"rdr_3MSAFM23CK82VSTT4BN6RWSQ65","maxLength":30,"minLength":30,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateReaderCheckout"}}}},"responses":{"201":{"content":{"application/json":{"schema":{"properties":{"data":{"properties":{"client_transaction_id":{"description":"The client transaction ID is a unique identifier for the transaction that is generated for the client.\nIt can be used later to fetch the transaction details via the [Transactions API](https://developer.sumup.com/api/transactions/get).\n","example":"123e4567-e89b-12d3-a456-426614174000","format":"uuid","type":"string"}},"type":"object"}},"type":"object"}}},"description":"The Checkout got successfully created for the given reader.\n"},"400":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Bad Request","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Bad Request"},"422":{"content":{"application/json":{"examples":{"DataValidation":{"description":"Validation errors for the informed fields.","value":{"errors":{"card_type":["is invalid"],"installments":["not allowed"],"total_amount":["is too low","this merchant can only accept 'EUR'"]}}},"ReaderCheckoutPending":{"description":"Error returned when a checkout was requested in the last 60 seconds.","value":{"errors":{"detail":"A pending transaction already exists for this device"}}},"ReaderOffline":{"description":"Error returned when the target device is not online.","value":{"errors":{"detail":"The device is offline.","type":"READER_OFFLINE"}}}},"schema":{"properties":{"errors":{"additionalProperties":true,"type":"object"}},"type":"object"}}},"description":"Unprocessable Entity"},"500":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Internal Server Error","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Internal Server Error"},"502":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Bad Gateway","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Bad Gateway"},"504":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Gateway Timeout","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Gateway Timeout"}},"summary":"Create a Reader Checkout","tags":["Readers"],"x-codegen":{"method_name":"create_checkout"},"x-permissions":["readers_checkout_create"],"x-scopes":["readers.write"]}},"/v0.1/merchants/{merchant_code}/readers/{id}/terminate":{"post":{"description":"Create a Terminate action for a Reader.\n\nIt stops the current transaction on the target device.\n\nThis process is asynchronous and the actual termination may take some time to be performed on the device.\n\n\nThere are some caveats when using this endpoint:\n* The target device must be online, otherwise terminate won't be accepted\n* The action will succeed only if the device is waiting for cardholder action: e.g: waiting for card, waiting for PIN, etc.\n* There is no confirmation of the termination.\n\nIf a transaction is successfully terminated and `return_url` was provided on Checkout, the transaction status will be sent as `failed` to the provided URL.\n\n**Note**: If the target device is a Solo, it must be in version 3.3.28.0 or higher.\n","operationId":"CreateReaderTerminate","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"The unique identifier of the reader.\n","in":"path","name":"id","required":true,"schema":{"example":"rdr_3MSAFM23CK82VSTT4BN6RWSQ65","maxLength":30,"minLength":30,"type":"string"}}],"responses":{"202":{"description":"The Terminate action was successfully dispatched for the given reader.\n"},"422":{"content":{"application/json":{"examples":{"ReaderOffline":{"description":"Error returned when the target device is not online.","value":{"errors":{"detail":"The device is offline.","type":"READER_OFFLINE"}}}},"schema":{"properties":{"errors":{"additionalProperties":true,"type":"object"}},"type":"object"}}},"description":"Unprocessable Entity"},"500":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Internal Server Error","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Internal Server Error"},"502":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Bad Gateway","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Bad Gateway"},"504":{"content":{"application/json":{"schema":{"properties":{"errors":{"properties":{"detail":{"example":"Gateway Timeout","type":"string"}},"type":"object"}},"type":"object"}}},"description":"Gateway Timeout"}},"summary":"Create a Reader Terminate action","tags":["Readers"],"x-codegen":{"method_name":"terminate_checkout"},"x-permissions":["readers_checkout_create"],"x-scopes":["readers.write"]}},"/v1.1/merchants/{merchant_code}/bank-accounts":{"get":{"description":"Retrieves bank accounts of the merchant.","operationId":"ListBankAccountsV11","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"If true only the primary bank account (the one used for payouts) will be returned.","in":"query","name":"primary","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BankAccount"},"type":"array"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"403":{"content":{"application/json":{"examples":{"Forbidden":{"description":"You do not have required scopes for making this request.","value":{"error_code":"FORBIDDEN","error_message":"request_not_allowed","status_code":"403"}}},"schema":{"$ref":"#/components/schemas/ErrorForbidden"}}},"description":"Forbidden"}},"summary":"List bank accounts","tags":["Merchant"],"x-codegen":{"method_name":"list_bank_accounts"},"x-scopes":["user.payout-settings","user.profile","user.profile_readonly"]}},"/v1.1/receipts/{id}":{"get":{"description":"Retrieves receipt specific data for a transaction.","operationId":"GetReceipt","parameters":[{"description":"SumUp unique transaction ID or transaction code, e.g. TS7HDYLSKD.","in":"path","name":"id","required":true,"schema":{"type":"string"}},{"description":"Merchant code.","in":"query","name":"mid","required":true,"schema":{"type":"string"}},{"description":"The ID of the transaction event (refund).","in":"query","name":"tx_event_id","schema":{"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Receipt"}}},"description":"OK"},"400":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"Retrieve receipt details","tags":["Receipts"],"x-codegen":{"method_name":"get"},"x-scopes":[]}},"/v2.1/merchants/{merchant_code}/transactions":{"get":{"description":"Retrieves the full details of an identified transaction. The transaction resource is identified by a query parameter and *one* of following parameters is required:\n *  `id`\n *  `internal_id`\n *  `transaction_code`\n *  `foreign_transaction_id`\n *  `client_transaction_id`\n","operationId":"GetTransactionV2.1","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"Retrieves the transaction resource with the specified transaction ID (the `id` parameter in the transaction resource).","in":"query","name":"id","schema":{"type":"string"}},{"description":"Retrieves the transaction resource with the specified internal transaction ID (the `internal_id` parameter in the transaction resource).","in":"query","name":"internal_id","schema":{"type":"string"}},{"description":"Retrieves the transaction resource with the specified transaction code.","in":"query","name":"transaction_code","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionFull"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"},"404":{"content":{"application/json":{"examples":{"Not_Found":{"description":"The identified resource is not found on the server.","value":{"error_code":"NOT_FOUND","message":"Resource not found"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Not Found"}},"summary":"Retrieve a transaction","tags":["Transactions"],"x-codegen":{"method_name":"get"},"x-scopes":["transactions.history"]}},"/v2.1/merchants/{merchant_code}/transactions/history":{"get":{"description":"Lists detailed history of all transactions associated with the merchant profile.","operationId":"ListTransactionsV2.1","parameters":[{"in":"path","name":"merchant_code","required":true,"schema":{"example":"MC0X0ABC","type":"string"}},{"description":"Retrieves the transaction resource with the specified transaction code.","in":"query","name":"transaction_code","schema":{"type":"string"}},{"description":"Specifies the order in which the returned results are displayed.","in":"query","name":"order","schema":{"default":"ascending","enum":["ascending","descending"],"type":"string"}},{"description":"Specifies the maximum number of results per page. Value must be a positive integer and if not specified, will return 10 results.","in":"query","name":"limit","schema":{"type":"integer"}},{"description":"Filters the returned results by user email.","in":"query","name":"users","schema":{"items":{"format":"email","type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of final statuses of the transactions.","in":"query","name":"statuses","schema":{"items":{"enum":["SUCCESSFUL","CANCELLED","FAILED","REFUNDED","CHARGE_BACK"],"type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of payment types used for the transactions.","in":"query","name":"payment_types","schema":{"items":{"enum":["CASH","POS","ECOM","BALANCE","MOTO","BOLETO","UNKNOWN"],"type":"string"},"type":"array"}},{"description":"Filters the returned results by the specified list of transaction types.","in":"query","name":"types","schema":{"items":{"enum":["PAYMENT","REFUND","CHARGE_BACK"],"type":"string"},"type":"array"}},{"description":"Filters the results by the latest modification time of resources and returns only transactions that are modified *at or after* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"changes_since","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the creation time of resources and returns only transactions that are created *before* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"newest_time","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the reference ID of transaction events and returns only transactions with events whose IDs are *smaller* than the specified value. This parameters supersedes the `newest_time` parameter (if both are provided in the request).","in":"query","name":"newest_ref","schema":{"type":"string"}},{"description":"Filters the results by the creation time of resources and returns only transactions that are created *at or after* the specified timestamp (in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format).","in":"query","name":"oldest_time","schema":{"format":"date-time","type":"string"}},{"description":"Filters the results by the reference ID of transaction events and returns only transactions with events whose IDs are *greater* than the specified value. This parameters supersedes the `oldest_time` parameter (if both are provided in the request).","in":"query","name":"oldest_ref","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"items":{"items":{"$ref":"#/components/schemas/TransactionHistory"},"type":"array"},"links":{"items":{"$ref":"#/components/schemas/Link"},"type":"array"}},"type":"object"}}},"description":"OK"},"401":{"content":{"application/json":{"examples":{"Invalid_Token":{"description":"The access token is invalid or has expired.","value":{"error_code":"NOT_AUTHORIZED","error_message":"invalid access token"}},"Missing_Token":{"description":"No access token is provided.","value":{"error_code":"NOT_AUTHORIZED","message":"access token required"}},"Not_Authorized_Token":{"description":"The access token is valid but the application is not authorized.","value":{"error_code":"NOT_AUTHORIZED","error_message":"NOT_AUTHORIZED"}}},"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized"}},"summary":"List transactions","tags":["Transactions"],"x-codegen":{"method_name":"list"},"x-scopes":["transactions.history"]}}},"servers":[{"description":"Production server","url":"https://api.sumup.com"}],"tags":[{"description":"SumUp API uses [API keys](/online-payments/introduction/authorization#api-keys) for authentication.\nYou can view and manage your API keys in the [API Keys](/api-keys) section of the [Developer Portal](/).\n\n\nAPI keys are short static tokens that are passed in the `Authorization` header to authenticate the requests.\n\n\nThe tokens have a `sup_sk_` prefix. Your API keys have access to the whole SumUp API, so make sure to keep them secure.\n\n\nAll requests must be made over [HTTPS](https://en.wikipedia.org/wiki/HTTPS) and must be authenticated.\n\n\nAlternatively, SumUp APIs support [OAuth2](/online-payments/introduction/authorization#oauth-20) authentication for applications that want to use SumUp as a platform for other users.\n\n\nRead more about authorization in our [Authorization guide](/online-payments/introduction/authorization).\n","name":"Authorization"},{"description":"Accept payments from your end users by adding the Checkouts model to your platform.\nSumUp supports standard and single payment 3DS checkout flows.\n\nThe Checkout model allows creating, listing, retrieving, processing and deactivating checkouts.\nA payment is completed by creating a checkout and then processing the checkout.\n","name":"Checkouts","x-core-objects":[{"$ref":"#/components/schemas/Checkout"}]},{"description":"Allow your regular customers to save their information with the Customers model.\nThis will prevent re-entering payment instrument information for recurring payments on your platform.\n\nDepending on the needs you can allow, creating, listing or deactivating payment instruments \u0026 creating, retrieving and updating customers.\n","name":"Customers","x-core-objects":[{"$ref":"#/components/schemas/Customer"}]},{"description":"Retrieve details for a specific transaction by it’s `id`\nor any other required query parameter, or list all transactions related to the merchant account.\n","name":"Transactions"},{"description":"The Payouts model will allow you to track funds you’ve received from SumUp.\nYou can receive a detailed payouts list with information like dates, fees, references and statuses, using the `List payouts` endpoint.\n","name":"Payouts","x-core-objects":[{"$ref":"#/components/schemas/FinancialPayouts"}]},{"description":"The Receipts model obtains receipt-like details for specific transactions.","name":"Receipts","x-core-objects":[{"$ref":"#/components/schemas/Receipt"}]},{"description":"Manage merchant profile.","name":"Merchant","x-core-objects":[{"$ref":"#/components/schemas/MerchantAccount"}]},{"description":"API Keys allow your application to gain programmatic access to SumUp.\nAPI Keys allow application to do authorized requests within the SumUp ecosystem. API Keys are scopes to single account and thus can't be used for endpoints where user presence is needed (for such endpoints it is necessary to use OAuth2).\n","name":"API Keys","x-core-objects":[{"$ref":"#/components/schemas/APIKey"}]},{"description":"Endpoints for managing merchant sub-accounts (operators).\n","name":"Subaccounts","x-core-objects":[{"$ref":"#/components/schemas/Operator"}]},{"description":"Endpoints to manage account members. Members are users that have membership within merchant accounts.\n","name":"Members","x-beta":true,"x-core-objects":[{"$ref":"#/components/schemas/Member"}]},{"description":"A reader represents a device that accepts payments. You can use the SumUp Solo to accept in-person payments.\n","name":"Readers","x-beta":true,"x-core-objects":[{"$ref":"#/components/schemas/Reader"}]}]}
